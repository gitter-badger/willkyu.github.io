<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>收藏◇知觉丧失◇与不完备定理</title>
    <url>/Archive/1-Collection/</url>
    <content><![CDATA[<blockquote>
<p>纵然身朽去，心美亦永恒</p>
</blockquote>
<p>封面 [ID:71672001]. </p>
<span id="more"></span>

<h1 id="None"><a href="#None" class="headerlink" title="None."></a>None.</h1>]]></content>
      <categories>
        <category>Collection</category>
      </categories>
      <tags>
        <tag>Collection</tag>
        <tag>Archive</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏◇动机判定◇与去悲剧化</title>
    <url>/Archive/1-Game/</url>
    <content><![CDATA[<blockquote>
<p>真想见识更多的景色啊.<br>正因为知道了世界的广阔和自己的渺小，<br>才会对明天充满希望！</p>
</blockquote>
<blockquote>
<p>有的人说，<br>因为世界如此之大，<br>才有了各种各样的想法.<br>也有的人说，<br>正是因为各种各样的想法，<br>世界才如此广阔.<br>这两种说法，<br>都是正确的.</p>
</blockquote>
<p>封面 [ID:90778756]. </p>
<span id="more"></span>

<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><blockquote>
<p>如果你面对抉择的时候，让别人替你做决定.<br>你会对事情的结果后悔的.</p>
</blockquote>
<br>

<hr>
<br>

<h1 id="Flash-Card"><a href="#Flash-Card" class="headerlink" title="Flash Card"></a>Flash Card</h1><ul>
<li><a href="/Game/DSTWO/">DSTWO相关资源整理</a></li>
<li><a href="/Game/EZODE/">EZ-Flash Omega Definitive Edition相关资源整理</a></li>
</ul>
<br>

<hr>
<br>

<h1 id="Splatoon2"><a href="#Splatoon2" class="headerlink" title="Splatoon2"></a>Splatoon2</h1><ul>
<li><a href="/Game/Share-Splatoon2-Happiness/">快乐的喷喷生活</a></li>
</ul>
]]></content>
      <categories>
        <category>Game</category>
      </categories>
      <tags>
        <tag>Archive</tag>
        <tag>Game</tag>
      </tags>
  </entry>
  <entry>
    <title>学习◇生存博弈◇与纯利他主义</title>
    <url>/Archive/1-Learning/</url>
    <content><![CDATA[<blockquote>
<p>就算没达到预期的水平也不能放弃，继续锻炼.<br>不管什么时候，<br>改变世界的都是认真追求梦想的人.<br>——– <em><strong>阿戴克</strong></em> </p>
</blockquote>
<p>封面 [ID:90778756]. </p>
<span id="more"></span>

<h1 id="Learning"><a href="#Learning" class="headerlink" title="Learning"></a>Learning</h1><p>记录与整理学习上的一些要点或者问题.</p>
<h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><h4 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h4><ul>
<li><a href="/Learning/Notes/Pytorch/PyTorch01/">PyTorch笔记01—-基本数据类型</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch02/">PyTorch笔记02—-创建Tensor</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch03/">PyTorch笔记03—-索引与切片</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch04/">PyTorch笔记04—-Tensor维度变换</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch05/">PyTorch笔记05—-Broadcast自动扩展</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch06/">PyTorch笔记06—-拼接与拆分</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch07/">PyTorch笔记07—-基本运算</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch08/">PyTorch笔记08—-统计属性</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch09/">PyTorch笔记09—-高阶OP</a></li>
<li><a href="/Learning/Notes/Pytorch/PyTorch10/">PyTorch笔记10—-激活函数与常见Loss</a></li>
</ul>
<h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><ul>
<li><a href="/Learning/Solutions/Accessing-GitHub-Slowly-Solution/">解决访问GithHub速度慢的问题</a></li>
</ul>
<br>

<hr>
<br>

<h1 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h1><ul>
<li><a href="/Learning/Blog/Build-Your-Own-Blog-Like-This-One/">基于Hexo与GitHub制作私人博客</a>.</li>
<li><a href="/Learning/Blog/Blog-Personalization/">博客个性化笔记—-基于Ocean</a></li>
<li><a href="https://markdown.com.cn/basic-syntax/">MarkDown语法</a></li>
<li><a href="/ZONE/Emoji/Emoji.html">MarkDown支持Emoji列表</a><br>原地址: <a href="https://gist.github.com/rxaviers/7360908">Complete list of github markdown emoji markup</a></li>
</ul>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Archive</tag>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>宝可梦◇熵增定律◇与死亡誓言</title>
    <url>/Archive/1-Pokemon/</url>
    <content><![CDATA[<blockquote>
<p>强大的宝可梦，<br>弱小的宝可梦，<br>那只是人的一己之见.<br>真正强大的训练家应该为了用自己喜欢的宝可梦获胜而努力才对哦.<br>你知道什么才是最重要的呢.<br>像以往那样前进吧，<br>冠军在等你哦.<br>——– <em><strong>梨花</strong></em></p>
</blockquote>
<p>封面 [ID:79498766]. </p>
<span id="more"></span>

<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><blockquote>
<p>我知道你，你就是那个把宝可梦往死里使唤的训练师！<br>你算什么！没有宝可梦，你算什么！<br>你……到底伤害了多少精灵才走到今天这一步的？</p>
</blockquote>
<hr>
<blockquote>
<p>我有话要对你说.<br>那是我在唐草镇第一次遇见你的时候.<br>从你的宝可梦那里听到的声音让我很震惊………<br>因为它说<br>喜欢你，<br>想和你在一起.<br>当时我不理解.<br>世界上居然有喜欢人类的宝可梦.<br>在那之前我还不知道有这样的宝可梦………<br>从那之后，随著我继续旅行，我的内心逐渐动摇………<br>因为我遇到的都是心灵相通、互相帮助的宝可梦和人类.<br>所以，我才想和你战斗，看看自己相信的东西究竟是什么………<br>我曾希望能同样作为英雄，与你面对面………<br>只考虑宝可梦………<br>不，连宝可梦也无法理解的我………<br>根本不可能战胜与众多宝可梦邂逅，身边还围绕著同伴的你………<br>冠军原谅我了………<br>但是今后我该怎么做，还是要我自己决定………<br>你说过，你有梦想.<br>那就去实现那个梦想吧！<br>实现美好的梦想，将它作为你所追求的真实！<br>那么………<br>再见了！<br>——– <em><strong>N</strong></em></p>
</blockquote>
<br>

<hr>
<br>

<h1 id="VS-Recorder"><a href="#VS-Recorder" class="headerlink" title="VS. Recorder"></a><a href="/Pokemon/VS-Recorder/">VS. Recorder</a></h1><p>An amazing device that can record a battle either between friends or at a special battle facility.</p>
<br>

<hr>
<br>

<h1 id="Strategies"><a href="#Strategies" class="headerlink" title="Strategies"></a>Strategies</h1><p>这里我会用来专门整理宝可梦相关攻略，我之后写的攻略也会将直达链接放在这里，方便大家直接查找.</p>
<h2 id="In-Game-Strategies"><a href="#In-Game-Strategies" class="headerlink" title="In-Game Strategies"></a>In-Game Strategies</h2><ul>
<li><p>关于游戏的锁区<details></p>
  <summary><img no-lazy src="/images/mimikyu.png" alt="Method 2 请点击丘丘" align=left></summary>
  <img src="/images/body/1-Pokemon/ZoneLock.jpg" alt="游戏锁区表">

<p>  – gba不锁区<br>  – 3ds玩3ds卡必锁区<br>  – 主机（不包括ns）全部锁区（n64不清楚 有待考证）</p>
</details><br><br></li>
<li><p><a href="https://tieba.baidu.com/p/6580100866?red_tag=2783794550">【攻略】【直播演示】GEN3 全图鉴 全精灵 理论规划及演示 – 卧看微尘 百度贴吧</a></p>
</li>
<li><p><a href="/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles/">如何备份你的存档</a></p>
</li>
<li><p><a href="/Pokemon/Strategies/In-Game/WCD-Distribution-Patch/">如何自制宝可梦Gen4与Gen5的配信器</a></p>
</li>
</ul>
<h3 id="RNG-Abuse"><a href="#RNG-Abuse" class="headerlink" title="RNG Abuse"></a>RNG Abuse</h3><ul>
<li><a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a></li>
<li><a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part2/">宝可梦有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a></li>
</ul>
<h2 id="Out-Game-Strategies"><a href="#Out-Game-Strategies" class="headerlink" title="Out-Game Strategies"></a>Out-Game Strategies</h2><ul>
<li><a href="/Pokemon/Strategies/Out-Game/Pokemon-Cartridges-Authenticate/">宝可梦卡带鉴别</a></li>
</ul>
<br>

<hr>
<br>

<h1 id="Competition-Promotion"><a href="#Competition-Promotion" class="headerlink" title="Competition Promotion"></a>Competition Promotion</h1><ul>
<li><a href="/Pokemon/Promotion/Magi-cup-1st/">苏州大学第一届鲤鱼王杯</a></li>
</ul>
<br>

<hr>
<br>

<h1 id="Commemoration"><a href="#Commemoration" class="headerlink" title="Commemoration"></a>Commemoration</h1><ul>
<li><a href="/Pokemon/See-My-Loving-Pokemons/">纪念我爱的宝可梦们.</a></li>
<li><a href="/Pokemon/PokeSchedule/">willkyu的宝可梦计划</a></li>
</ul>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Archive</tag>
        <tag>Pokemon</tag>
      </tags>
  </entry>
  <entry>
    <title>生活◇奥康剃刀◇与自由意识</title>
    <url>/Archive/1-Life/</url>
    <content><![CDATA[<blockquote>
<p>重要的人和事物，<br>无论经历多久都不会改变，<br>人们如此祈祷着.</p>
</blockquote>
<p>封面 [ID:76002561]. </p>
<span id="more"></span>

<h1 id="Life-Recorder"><a href="#Life-Recorder" class="headerlink" title="Life-Recorder"></a>Life-Recorder</h1><blockquote>
<p>趁阳光正好，趁微风不燥，趁现在的双手还能拥抱彼此，趁我们还能呼吸，去见你想见的人，做你想做的事.</p>
</blockquote>
<blockquote>
<p>只要留存在什么人的记忆里……<br>那就是曾经存在过的证明.</p>
</blockquote>
<p>以<a href="/gallery/">Gallery</a>记录生活.</p>
<br>

<hr>
<br>

<h1 id="Imprisoned-Post"><a href="#Imprisoned-Post" class="headerlink" title="Imprisoned Post"></a>Imprisoned Post</h1><ul>
<li><a href="/Life/Draw-100Days/">Draw 100Days</a></li>
</ul>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Archive</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>置顶◇代办◇与更新记录</title>
    <url>/Archive/The-First-Blog/</url>
    <content><![CDATA[<p>欢迎光临will的Blog，这是第一次使用博客的方式记录东西，希望能坚持下去！<br>此博客基于 <a href="https://hexo.io/">Hexo</a> 打造，主题使用的是 <a href="https://github.com/zhwangart/hexo-theme-ocean">Ocean</a>. </p>
<p>当你在阅读的时候有任何的问题,欢迎与我联系.</p>
<p>封面 [ID:85357809]. </p>
<span id="more"></span>

<h1 id="About-willkyu-and-This-Blog"><a href="#About-willkyu-and-This-Blog" class="headerlink" title="About willkyu and This Blog"></a>About willkyu and This Blog</h1><p>一只不务正业的谜拟Q 与其创建的不务正业的Blog.</p>
<p>更多 <em>关于</em> 请参见 <a href="/about/">About 页面</a>.</p>
<h1 id="Archives"><a href="#Archives" class="headerlink" title="Archives"></a>Archives</h1><ul>
<li><a href="/Archive/1-Pokemon/">宝可梦◇熵增定律◇与死亡誓言</a></li>
<li><a href="/Archive/1-Learning/">学习◇生存博弈◇与纯利他主义</a></li>
<li><a href="/Archive/1-Game/">游戏◇动机判定◇与去悲剧化</a></li>
<li><a href="/Archive/1-Life/">生活◇奥康剃刀◇与自由意识</a></li>
<li><a href="/Archive/1-Collection/">收藏◇知觉丧失◇与不完备定理</a></li>
</ul>
<h1 id="To-do-list"><a href="#To-do-list" class="headerlink" title="To-do list"></a>To-do list</h1><p>下面是一些之后的计划,用小标题表示,具体的进度会随时更新在下面.</p>
<h3 id="记录与分享生活"><a href="#记录与分享生活" class="headerlink" title="记录与分享生活"></a>记录与分享生活</h3><ul>
<li>2021-12-04 创建<a href="/Pokemon/See-My-Loving-Pokemons/">亲爱的宝可梦♡</a>页面.</li>
<li>2021-12-05 创建<a href="/Game/Share-Splatoon2-Happiness/">快乐的喷喷生活</a>页面.</li>
<li>2021-12-06 创建<a href="/Pokemon/VS-Recorder/">VS. Recorder</a>页面.<br>AnyTime.</li>
</ul>
<h3 id="整理一些宝可梦系列相关的知识等，包含游戏内知识与游戏外知识"><a href="#整理一些宝可梦系列相关的知识等，包含游戏内知识与游戏外知识" class="headerlink" title="整理一些宝可梦系列相关的知识等，包含游戏内知识与游戏外知识"></a>整理一些宝可梦系列相关的知识等，包含游戏内知识与游戏外知识</h3><ul>
<li>2021-12-03 创建<a href="/Archive/1-Pokemon/">宝可梦攻略整理</a>页面.<ul>
<li>2021-12-13 已合并至宝可梦归档页面：<a href="/Archive/1-Pokemon/">宝可梦◇熵增定律◇与死亡誓言</a>.</li>
</ul>
</li>
<li>2021-12-04 完成文章<a href="/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles">如何备份你的存档</a>页面.</li>
<li>2021-12-07 完成文章<a href="/Pokemon/Strategies/Out-Game/Pokemon-Cartridges-Authenticate/">宝可梦卡带鉴别</a>.</li>
<li>2021-12-16 完成文章<a href="/Pokemon/Strategies/In-Game/WCD-Distribution-Patch/">如何自制宝可梦Gen4与Gen5的配信器</a>.</li>
</ul>
<p>No Hurry.<br>准备从自己b站专栏搬一点先.</p>
<h3 id="整理一下宝可梦各时代的乱数方法"><a href="#整理一下宝可梦各时代的乱数方法" class="headerlink" title="整理一下宝可梦各时代的乱数方法"></a>整理一下宝可梦各时代的乱数方法</h3><ul>
<li>第三世代(RSE)<ul>
<li>2021-12-03 完成文章<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a>.</li>
<li>2021-12-14 完成文章<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part2/">宝可梦有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a>.</li>
</ul>
</li>
<li>第四世代(DPPt HgSs)</li>
<li>第五世代(BW BW2)</li>
<li>第六世代(XY OrAs)</li>
<li>第七世代(SM UsUm)</li>
</ul>
<h3 id="总结一下搭建博客的方法"><a href="#总结一下搭建博客的方法" class="headerlink" title="总结一下搭建博客的方法"></a>总结一下搭建博客的方法</h3><ul>
<li>2021-12-02 完成了文章<a href="/Learning/Blog/Build-Your-Own-Blog-Like-This-One/">基于Hexo与GitHub制作私人博客</a>.</li>
<li>2021-12-19 完成文章<a href="/Learning/Blog/Blog-Personalization/">博客个性化笔记—-基于Ocean</a></li>
</ul>
<h3 id="给博客加上评论等功能"><a href="#给博客加上评论等功能" class="headerlink" title="给博客加上评论等功能"></a>给博客加上评论等功能</h3><ul>
<li>2021-12-06 想鸽了.</li>
<li>2021-12-13 思考必要性.</li>
<li>2021-12-17 实现Gitalk评论功能，使用GitHub账号登陆，支持MarkDown语法. 此外新增指定post开启评论功能.<br><em><strong>请不要发布无意义的评论</strong></em><br>当你在某篇文章下评论后，如果有其他人跟帖，你也会收到GitHub邮件提醒.<br>如果想要取消，请前去<a href="https://github.com/willkyu/Hexo-Gitalk/issues">Issues</a>中找到对应<strong>Issue</strong>，进入后选择右侧栏的取消订阅 <em>Unsubscribe</em> 即可.</li>
</ul>
<h3 id="完善博客相册"><a href="#完善博客相册" class="headerlink" title="完善博客相册"></a>完善博客相册</h3><ul>
<li>2021-12-02 添加了3张生活照.</li>
<li>宝可梦相关的照片请见：<a href="/Pokemon/See-My-Loving-Pokemons/">亲爱的宝可梦♡</a>页面.</li>
<li>喷喷相关的照片请见：<a href="/Game/Share-Splatoon2-Happiness/">快乐的喷喷生活</a>页面.</li>
<li>2021-12-19 拍的好看照片太少了555，也许应该多出去走走.<br>No Hurry.</li>
</ul>
<h3 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h3><ul>
<li>请参考<a href="/Archive/1-Learning/">学习◇生存博弈◇与纯利他主义</a>页面.</li>
<li>2021-12-17 思考是否要将笔记转移至GitHub仓库.</li>
</ul>
<h3 id="个性化博客"><a href="#个性化博客" class="headerlink" title="个性化博客"></a>个性化博客</h3><ul>
<li>2021-12-01 更新了首页视频为 <strong>《GOTCHA》</strong> 片段.</li>
<li>2021-12-02 开启Gallery功能.</li>
<li>2021-12-02 新增Favorites页面.</li>
<li>2021-12-02 更新了谜拟Q的icon.</li>
<li>2021-12-03 更新了404页面.<br>404界面的图片：[ID:29310361].<ul>
<li>2021-12-16 已更换，点击<a href="/old404-1/">这里</a>来访问原来的404页面</li>
</ul>
</li>
<li>2021-12-04 背景添加动态线条效果.</li>
<li>2021-12-04 添加了点击特效.</li>
<li>2021-12-05 更新了点击特效的颜色，使其更贴合博客风格. 试试长按再松开~</li>
<li>2021-12-06 新增博客隐藏功能.</li>
<li>2021-12-13 加入大分类页(<a href="/Archive/1-Pokemon/">宝可梦◇熵增定律◇与死亡誓言</a>、<a href="/Archive/1-Learning/">学习◇生存博弈◇与纯利他主义</a>、<a href="/Archive/1-Game/">游戏◇动机判定◇与去悲剧化</a>、<a href="/Archive/1-Life/">生活◇奥康剃刀◇与自由意识</a>、<a href="/Archive/1-Collection/">收藏◇知觉丧失◇与不完备定理</a>)以归档所有博客并置顶. 使博客更加美观简洁，提高易读性.</li>
<li>2021-12-15 修改了博客结构，使得博客分类更加直观.</li>
<li>2021-12-15 实现背景动态线条的随机颜色效果.</li>
<li>2021-12-16 更新了404页面，套用<a href="https://hakim.se/">hakim.se</a>网站的404界面.<ul>
<li>2021-12-18 已更换，点击<a href="/old404-2/">这里</a>来访问原来的404页面</li>
</ul>
</li>
<li>2021-12-16 更新了博客的一些细节，修复了Category页面无法正确显示标题的错误.</li>
<li>2021-12-17 实现博客评论功能，详见<a href="#%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%8A%E8%AF%84%E8%AE%BA%E7%AD%89%E5%8A%9F%E8%83%BD">本页面</a>.</li>
<li>2021-12-18 实现图片懒加载.</li>
<li>2021-12-19 更新了404页面，使用了<a href="https://github.com/HFIProgramming/mikutap">Mikutap</a>作为网站的404界面.</li>
<li>2021-12-20 新增博客加密功能.</li>
</ul>
<p>No Hurry.</p>
<h1 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><ul>
<li><p>点击<a href="/ZONE/WeiChenDemo/index.html">这里</a>来访问卧看小工具测试页.<br>成品：<a href="https://wokann.github.io/Tool/GEN3_Mirage_island/index.html">3代幻之岛计算器</a>.</p>
</li>
<li><p>点击<a href="/404/">这里</a>来访问最新的404页面.</p>
</li>
<li><p>点击<a href="/old404-1/">这里</a>来访问第一代404页面</p>
</li>
<li><p>点击<a href="/old404-2/">这里</a>来访问第二代404页面</p>
</li>
</ul>
<h1 id="Something-else"><a href="#Something-else" class="headerlink" title="Something else"></a>Something else</h1><p>本博客中未说明来源的绘图可能是忘记了来源,还请见谅. 如有侵权请与我联系!</p>
]]></content>
      <categories>
        <category>Archive</category>
      </categories>
      <tags>
        <tag>Archive</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>快乐的喷喷生活</title>
    <url>/Game/Share-Splatoon2-Happiness/</url>
    <content><![CDATA[<p>以此Blog记录我爱的 <em>Splatoon</em> 和朋友们.<br>间谍伞，嘿嘿，间谍伞.</p>
<p>封面 [ID:82331425]. </p>
<span id="more"></span>
<h2 id="Thanks-TO"><a href="#Thanks-TO" class="headerlink" title="Thanks TO"></a>Thanks TO</h2><h4 id="先感谢专业摄影师-口一宝——————"><a href="#先感谢专业摄影师-口一宝——————" class="headerlink" title="先感谢专业摄影师 口一宝——————"></a>先感谢专业摄影师 <em>口一宝</em>——————</h4><p><img src="/images/body/Share-Splatoon2-Happiness/Photographer.png" alt="Photographer"></p>
<h4 id="感谢和我一起玩的朋友们："><a href="#感谢和我一起玩的朋友们：" class="headerlink" title="感谢和我一起玩的朋友们："></a>感谢和我一起玩的朋友们：</h4><ul>
<li>天才口一狗勾</li>
<li>蜜柑xbb</li>
<li>童泡泡</li>
<li>梨梨猫猫</li>
<li>浴缸狂魔钢蛋</li>
<li>还有海产群的以及和我一起快乐喷喷的各位!</li>
</ul>
<h2 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h2><p><img src="/images/body/Share-Splatoon2-Happiness/S(1).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(2).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(3).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(4).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(5).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(6).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(7).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(8).png"><br><img src="/images/body/Share-Splatoon2-Happiness/S(9).png"></p>
]]></content>
      <categories>
        <category>Game</category>
      </categories>
      <tags>
        <tag>Life</tag>
        <tag>Splatoon</tag>
      </tags>
  </entry>
  <entry>
    <title>willkyu的宝可梦计划</title>
    <url>/Pokemon/PokeSchedule/</url>
    <content><![CDATA[<p>使用 <em>CheckBox</em> 记录宝可梦各世代的目标以及完成情况.<br>你可以将这篇当作<strong>各版本要素整理</strong>.<br>如果还有什么有意思的要素欢迎<a href="/about/">与我联系</a>.</p>
<p>封面 [ID:94230956]. </p>
<span id="more"></span>

<blockquote>
<p>未完成.<br>之后将细化正作部分与补充旁支部分.</p>
</blockquote>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><h3 id="第三世代"><a href="#第三世代" class="headerlink" title="第三世代"></a>第三世代</h3><h4 id="红宝石"><a href="#红宝石" class="headerlink" title="红宝石"></a>红宝石</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID: 02233</li>
<li><input checked="" disabled="" type="checkbox"> 通关联盟</li>
<li><input checked="" disabled="" type="checkbox"> 50级对战塔50+连胜: 当前63，最高63</li>
<li><input disabled="" type="checkbox"> 100级对战塔50+连胜</li>
<li><input disabled="" type="checkbox"> 研究华丽大赛</li>
<li><input disabled="" type="checkbox"> 研究制作宝可方块</li>
<li><input disabled="" type="checkbox"> 出现幻之岛</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 完成丰缘图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 装饰秘密基地</li>
<li><input disabled="" type="checkbox"> 满级训练师卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="蓝宝石"><a href="#蓝宝石" class="headerlink" title="蓝宝石"></a>蓝宝石</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="火红"><a href="#火红" class="headerlink" title="火红"></a>火红</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="叶绿"><a href="#叶绿" class="headerlink" title="叶绿"></a>叶绿</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID: 07411</li>
<li><input disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> 给宝可梦拍照</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 完成关都全图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 游玩小游戏</li>
<li><input disabled="" type="checkbox"> 游玩训练家之塔</li>
<li><input disabled="" type="checkbox"> 满级训练师卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="绿宝石"><a href="#绿宝石" class="headerlink" title="绿宝石"></a>绿宝石</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<hr>
<hr>
<h3 id="第四世代"><a href="#第四世代" class="headerlink" title="第四世代"></a>第四世代</h3><h4 id="珍珠"><a href="#珍珠" class="headerlink" title="珍珠"></a>珍珠</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="钻石"><a href="#钻石" class="headerlink" title="钻石"></a>钻石</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> 研究华丽大赛</li>
<li><input disabled="" type="checkbox"> 研究连锁机制</li>
<li><input disabled="" type="checkbox"> 研究地下世界</li>
<li><input disabled="" type="checkbox"> 研究宝芬</li>
<li><input disabled="" type="checkbox"> 集齐饰品</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 绘制签名，更换联机形象</li>
<li><input disabled="" type="checkbox"> 对战塔100+连胜</li>
<li><input disabled="" type="checkbox"> 完成神奥图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 满级训练家卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="白金"><a href="#白金" class="headerlink" title="白金"></a>白金</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="心金"><a href="#心金" class="headerlink" title="心金"></a>心金</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input disabled="" type="checkbox"> 给宝可梦拍照（别忘了火箭队的衣服）</li>
<li><input disabled="" type="checkbox"> 通关城都联盟</li>
<li><input disabled="" type="checkbox"> 通关关都联盟</li>
<li><input disabled="" type="checkbox"> 收集闪耀的叶片</li>
<li><input disabled="" type="checkbox"> 通关宝可全能竞技赛</li>
<li><input disabled="" type="checkbox"> 绘制签名，更换联机形象</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 计步器路线全收集</li>
<li><input disabled="" type="checkbox"> 对战塔100+连胜</li>
<li><input disabled="" type="checkbox"> 完成城都图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 游玩对战开拓区</li>
<li><input disabled="" type="checkbox"> 游玩训练家之屋</li>
<li><input disabled="" type="checkbox"> 游玩格斗道场</li>
<li><input disabled="" type="checkbox"> 收集所有宝可装置号码</li>
<li><input disabled="" type="checkbox"> 满级训练家卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="魂银"><a href="#魂银" class="headerlink" title="魂银"></a>魂银</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<hr>
<hr>
<h3 id="第五世代"><a href="#第五世代" class="headerlink" title="第五世代"></a>第五世代</h3><h4 id="黑"><a href="#黑" class="headerlink" title="黑"></a>黑</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input checked="" disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> C装置皮肤全收集</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 完成合众图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 绘制签名，更换联机形象</li>
<li><input disabled="" type="checkbox"> 达到试炼屋<strong>大师</strong>等级</li>
<li><input disabled="" type="checkbox"> 研究释出之力</li>
<li><input disabled="" type="checkbox"> 研究宝可梦音乐剧</li>
<li><input disabled="" type="checkbox"> 获得所有宝可梦装扮道具</li>
<li><input disabled="" type="checkbox"> 研究连入</li>
<li><input disabled="" type="checkbox"> 满级训练家卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="白"><a href="#白" class="headerlink" title="白"></a>白</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="黑2"><a href="#黑2" class="headerlink" title="黑2"></a>黑2</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="白2"><a href="#白2" class="headerlink" title="白2"></a>白2</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input checked="" disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> C装置皮肤全收集</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input checked="" disabled="" type="checkbox"> 完成合众图鉴</li>
<li><input checked="" disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 绘制签名，更换联机形象</li>
<li><input disabled="" type="checkbox"> 达到试炼屋大师等级</li>
<li><input disabled="" type="checkbox"> 获得所有宝可梦装扮道具</li>
<li><input disabled="" type="checkbox"> 宝可梦好莱坞</li>
<li><input checked="" disabled="" type="checkbox"> 通关白色树洞</li>
<li><input disabled="" type="checkbox"> 奖牌全收集</li>
<li><input disabled="" type="checkbox"> 游玩PWT，收集PWT活动赠送锦标赛</li>
<li><input disabled="" type="checkbox"> 对战地铁连胜8+轮</li>
<li><input disabled="" type="checkbox"> 经营乔英大道</li>
<li><input disabled="" type="checkbox"> 满级训练家卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<hr>
<hr>
<h3 id="第六世代"><a href="#第六世代" class="headerlink" title="第六世代"></a>第六世代</h3><h4 id="X"><a href="#X" class="headerlink" title="X"></a>X</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input checked="" disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 完成卡洛斯中央图鉴</li>
<li><input disabled="" type="checkbox"> 完成卡洛斯海岸图鉴</li>
<li><input disabled="" type="checkbox"> 完成卡洛斯山岳图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 集齐所有宝可梦种类的后花园</li>
<li><input disabled="" type="checkbox"> 达到对战城堡称号<strong>大公 / 女大公</strong></li>
<li><input disabled="" type="checkbox"> 达到试炼屋<strong>大师</strong>等级</li>
<li><input disabled="" type="checkbox"> 游玩对战屋</li>
<li><input disabled="" type="checkbox"> 游玩反转对战服务</li>
<li><input disabled="" type="checkbox"> 满级训练家卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="Y"><a href="#Y" class="headerlink" title="Y"></a>Y</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="欧米伽红宝石"><a href="#欧米伽红宝石" class="headerlink" title="欧米伽红宝石"></a>欧米伽红宝石</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID: 40411</li>
<li><input disabled="" type="checkbox"> 通关联盟</li>
<li><input disabled="" type="checkbox"> 研究华丽大赛</li>
<li><input disabled="" type="checkbox"> 研究制作宝可方块</li>
<li><input disabled="" type="checkbox"> 达到试炼屋<strong>大师</strong>等级</li>
<li><input disabled="" type="checkbox"> 游玩对战屋</li>
<li><input disabled="" type="checkbox"> 游玩反转对战服务</li>
<li><input disabled="" type="checkbox"> 盒子皮肤全收集</li>
<li><input disabled="" type="checkbox"> 完成丰缘图鉴</li>
<li><input disabled="" type="checkbox"> 完成全国图鉴</li>
<li><input disabled="" type="checkbox"> 装饰秘密基地</li>
<li><input disabled="" type="checkbox"> 满级训练师卡片</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<hr>
<h4 id="阿尔法蓝宝石"><a href="#阿尔法蓝宝石" class="headerlink" title="阿尔法蓝宝石"></a>阿尔法蓝宝石</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<hr>
<hr>
<h3 id="第七世代"><a href="#第七世代" class="headerlink" title="第七世代"></a>第七世代</h3><h4 id="日"><a href="#日" class="headerlink" title="日"></a>日</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 喜欢的ID</li>
<li><input disabled="" type="checkbox"> 完成诸岛巡礼</li>
<li><input disabled="" type="checkbox"> 图章全收集</li>
<li><input disabled="" type="checkbox"> 将宝可梦搜寻镜升级到Ver.5</li>
<li><input disabled="" type="checkbox"> 完成美乐美乐图鉴</li>
<li><input disabled="" type="checkbox"> 完成阿卡拉图鉴</li>
<li><input disabled="" type="checkbox"> 完成乌拉乌拉图鉴</li>
<li><input disabled="" type="checkbox"> 完成波尼图鉴</li>
<li><input disabled="" type="checkbox"> 完成阿罗拉地区图鉴</li>
<li><input disabled="" type="checkbox"> 对战树50+连胜</li>
<li><input disabled="" type="checkbox"> 游玩皇家巨蛋</li>
<li><input disabled="" type="checkbox"> 将圆庆广场升级到Level 100+</li>
<li><input disabled="" type="checkbox"> 游戏时间999:59</li>
</ul>
<h4 id="月"><a href="#月" class="headerlink" title="月"></a>月</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="究极之日"><a href="#究极之日" class="headerlink" title="究极之日"></a>究极之日</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="究极之月"><a href="#究极之月" class="headerlink" title="究极之月"></a>究极之月</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="Let’s-Go！皮卡丘／Let’s-Go！伊布"><a href="#Let’s-Go！皮卡丘／Let’s-Go！伊布" class="headerlink" title="Let’s Go！皮卡丘／Let’s Go！伊布"></a>Let’s Go！皮卡丘／Let’s Go！伊布</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 不玩</li>
</ul>
<hr>
<hr>
<hr>
<h3 id="第八世代"><a href="#第八世代" class="headerlink" title="第八世代"></a>第八世代</h3><h4 id="剑"><a href="#剑" class="headerlink" title="剑"></a>剑</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 通关联盟</li>
<li><input checked="" disabled="" type="checkbox"> 完成伽勒尔图鉴</li>
<li><input disabled="" type="checkbox"> 完成铠岛图鉴</li>
<li><input disabled="" type="checkbox"> 完成王冠雪原图鉴</li>
<li><input disabled="" type="checkbox"> 对战塔33+场连胜</li>
<li><input disabled="" type="checkbox"> 级别对战大师球级</li>
</ul>
<hr>
<h4 id="盾"><a href="#盾" class="headerlink" title="盾"></a>盾</h4><ul>
<li><input disabled="" type="checkbox"> 开始游戏</li>
</ul>
<hr>
<h4 id="晶灿钻石／明亮珍珠"><a href="#晶灿钻石／明亮珍珠" class="headerlink" title="晶灿钻石／明亮珍珠"></a>晶灿钻石／明亮珍珠</h4><ul>
<li><input checked="" disabled="" type="checkbox"> 不玩</li>
</ul>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
        <tag>Schedule</tag>
      </tags>
  </entry>
  <entry>
    <title>亲爱的宝可梦♡</title>
    <url>/Pokemon/See-My-Loving-Pokemons/</url>
    <content><![CDATA[<p>以此博客纪念我爱的宝可梦们~~<br>封面 [ID:79498766]. </p>
<span id="more"></span>

<h1 id="チュチュ-（丘丘）"><a href="#チュチュ-（丘丘）" class="headerlink" title="チュチュ （丘丘）"></a>チュチュ （丘丘）</h1><p><img src="/images/body/See-My-Loving-Pokemons/kyukyu.png" alt="丘丘"></p>
<h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p><img src="/images/body/See-My-Loving-Pokemons/kyukyu-Summary.png" alt="Summary"></p>
<ul>
<li>种类：#778 <a href="https://wiki.52poke.com/wiki/%E8%B0%9C%E6%8B%9F%EF%BC%B1">谜拟Q</a></li>
<li>相遇时间：2021-01-03</li>
<li>相遇地点：阿罗拉地区乌拉乌拉岛超值超市旧址<img src="/images/body/See-My-Loving-Pokemons/Thrifty-Megamart.png" alt="Thrifty-Megamart"></li>
<li>相遇版本：ポケットモンスター サン</li>
</ul>
<p><img src="/images/body/See-My-Loving-Pokemons/kyukyu-Encounter1.png" alt="Encounter1"><br><img src="/images/body/See-My-Loving-Pokemons/kyukyu-Encounter2.png" alt="Encounter2"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="Volta"><a href="#Volta" class="headerlink" title="Volta"></a>Volta</h1><p><img src="/images/body/See-My-Loving-Pokemons/Volta.png" alt="Volta"></p>
<h2 id="About-1"><a href="#About-1" class="headerlink" title="About"></a>About</h2><p><img src="/images/body/See-My-Loving-Pokemons/Volta-Summary.png" alt="Summary"></p>
<ul>
<li>种类：#478 <a href="https://wiki.52poke.com/wiki/%E9%9B%AA%E5%A6%96%E5%A5%B3">雪妖女</a></li>
<li>相遇时间：2021-04-19</li>
<li>相遇地点：丰缘地区浅滩洞穴冰之房间<img src="/images/body/See-My-Loving-Pokemons/Hoenn_Shoal_Cave_Map.png" alt="Thrifty-Megamart"></li>
<li>相遇版本：Pokemon Ruby</li>
</ul>
<p><img src="/images/body/See-My-Loving-Pokemons/Volta-Encounter1.png" alt="Encounter1"></p>
<h2 id="Plans"><a href="#Plans" class="headerlink" title="Plans"></a>Plans</h2><ul>
<li>集齐3代奖章后传去4代进化.</li>
</ul>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="Ivy"><a href="#Ivy" class="headerlink" title="Ivy"></a>Ivy</h1><p><img src="/images/body/See-My-Loving-Pokemons/Ivy.png" alt="Ivy"></p>
<h2 id="About-2"><a href="#About-2" class="headerlink" title="About"></a>About</h2><p><img src="/images/body/See-My-Loving-Pokemons/Ivy-Summary.png" alt="Summary"></p>
<ul>
<li>种类：#282 <a href="https://wiki.52poke.com/wiki/%E6%B2%99%E5%A5%88%E6%9C%B5">沙奈朵</a></li>
<li>相遇时间：2021-01-22</li>
<li>相遇地点：丰缘地区102号道路<img src="/images/body/See-My-Loving-Pokemons/Route102.webp" alt="Thrifty-Megamart"></li>
<li>相遇版本：Pokemon Ruby</li>
</ul>
<p><img src="/images/body/See-My-Loving-Pokemons/Ivy-Encounter1.png" alt="Encounter1"></p>
<h2 id="Evolution"><a href="#Evolution" class="headerlink" title="Evolution"></a>Evolution</h2><p><img src="/images/body/See-My-Loving-Pokemons/Ivy-Evolution1.png" alt="Evolution1"></p>
<h2 id="Plans-1"><a href="#Plans-1" class="headerlink" title="Plans"></a>Plans</h2><ul>
<li>集齐3代奖章.</li>
</ul>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="Jirachi"><a href="#Jirachi" class="headerlink" title="Jirachi"></a>Jirachi</h1><p><img src="/images/body/See-My-Loving-Pokemons/Jirachi.png" alt="Jirachi"></p>
<h2 id="About-3"><a href="#About-3" class="headerlink" title="About"></a>About</h2><p><img src="/images/body/See-My-Loving-Pokemons/Jirachi-Summary.png" alt="Summary"></p>
<ul>
<li>种类：#385 <a href="https://wiki.52poke.com/wiki/%E5%9F%BA%E6%8B%89%E7%A5%88">基拉祈</a></li>
<li>相遇时间：2021-02-18</li>
<li>相遇地点：<a href="https://wiki.52poke.com/wiki/%E5%91%BD%E4%B8%AD%E6%B3%A8%E5%AE%9A%E8%88%AC%E7%9A%84%E7%9B%B8%E9%81%87">Fateful Encounter</a>.</li>
<li>相遇版本：Pokemon Ruby</li>
</ul>
<p><img src="/images/body/See-My-Loving-Pokemons/Jirachi-Encounter1.png" alt="Encounter1"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="Charizard"><a href="#Charizard" class="headerlink" title="Charizard"></a>Charizard</h1><p><img src="/images/body/See-My-Loving-Pokemons/Charizard.png" alt="Charizard"></p>
<h2 id="About-4"><a href="#About-4" class="headerlink" title="About"></a>About</h2><ul>
<li>种类：#006 <a href="https://wiki.52poke.com/wiki/%E5%96%B7%E7%81%AB%E9%BE%99">喷火龙</a></li>
<li>相遇时间：2021-07-26</li>
<li>相遇地点：关都地区真新镇<img src="/images/body/See-My-Loving-Pokemons/Pallet-Town.webp" alt="Pallet Town"></li>
<li>相遇版本：Pokemon Leaf Green</li>
</ul>
<p><img src="/images/body/See-My-Loving-Pokemons/Charizard-Encounter1.png" alt="Encounter1"></p>
<h2 id="Evolution-1"><a href="#Evolution-1" class="headerlink" title="Evolution"></a>Evolution</h2><p><img src="/images/body/See-My-Loving-Pokemons/Charizard-Evolution1.png" alt="Evolution1"><br><img src="/images/body/See-My-Loving-Pokemons/Charizard-Evolution2.png" alt="Evolution2"></p>
<h2 id="Plans-2"><a href="#Plans-2" class="headerlink" title="Plans"></a>Plans</h2><ul>
<li>集齐3代奖章.</li>
</ul>
<p><br><br></p>
<blockquote>
<p>Not The End.<br>:D</p>
</blockquote>
<p><br><br></p>
<hr>
<hr>
<br>

<h1 id="写在这里："><a href="#写在这里：" class="headerlink" title="写在这里："></a>写在这里：</h1><p>希望大家都能喜爱并珍惜与自己相遇的那些宝可梦！<br>享受宝可梦带来的快乐！</p>
<p><br><br></p>
<hr>
<hr>
<p><br><br></p>
<h1 id="More"><a href="#More" class="headerlink" title="More"></a>More</h1><h2 id="第三世代"><a href="#第三世代" class="headerlink" title="第三世代"></a>第三世代</h2><p><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(1).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(2).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(3).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(4).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(5).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(6).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(7).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(8).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(9).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(10).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G3/G3(11).png"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h2 id="第四世代"><a href="#第四世代" class="headerlink" title="第四世代"></a>第四世代</h2><p><img src="/images/body/See-My-Loving-Pokemons/More/G4/G4(1).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G4/G4(2).png"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h2 id="第五世代"><a href="#第五世代" class="headerlink" title="第五世代"></a>第五世代</h2><p><img src="/images/body/See-My-Loving-Pokemons/More/G5/G5(1).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G5/G5(2).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G5/G5(3).png"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h2 id="第六世代"><a href="#第六世代" class="headerlink" title="第六世代"></a>第六世代</h2><p><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(1).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(2).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(3).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(4).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(5).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(6).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(7).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(8).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(9).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(10).png"><br><img src="/images/body/See-My-Loving-Pokemons/More/G6/G6(11).png"></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h2 id="第七世代"><a href="#第七世代" class="headerlink" title="第七世代"></a>第七世代</h2><p>No Hurry.</p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h2 id="第八世代"><a href="#第八世代" class="headerlink" title="第八世代"></a>第八世代</h2><p>No Hurry.</p>
]]></content>
      <tags>
        <tag>Pokemon</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>VS. Recorder</title>
    <url>/Pokemon/VS-Recorder/</url>
    <content><![CDATA[<p>此 Blog 用于记录一些宝可梦对战比赛，终有一日成为宝可梦大师！<br>平时比赛可能不是很勤，尽量8.</p>
<p>封面 [ID:79621961]. </p>
<span id="more"></span>

<h2 id="2020年10月苏州月赛战报-冠军"><a href="#2020年10月苏州月赛战报-冠军" class="headerlink" title="2020年10月苏州月赛战报-冠军"></a>2020年10月苏州月赛战报-冠军</h2><p><img src="/images/body/VS-Recorder/SPL-2020-10-05.png" alt="SPL-2020-10-05"></p>
<h4 id="Date-2020-10-05"><a href="#Date-2020-10-05" class="headerlink" title="Date: 2020-10-05"></a>Date: 2020-10-05</h4><h4 id="Rule-不限标-允许携带最多一个幻兽"><a href="#Rule-不限标-允许携带最多一个幻兽" class="headerlink" title="Rule: 不限标 允许携带最多一个幻兽"></a>Rule: 不限标 允许携带最多一个幻兽</h4><h4 id="Record"><a href="#Record" class="headerlink" title="Record:"></a>Record:</h4><ul>
<li>第一轮瑞士轮 轮空</li>
<li>第二轮瑞士轮 vs red X<br>  首发谜拟Q+霜奶仙 对面首发野菊+妙蛙 赌对面点谜拟Q开空间所以霜奶仙换后排魔女 谜拟Q影袭队友触发弱测 结果对面打霜奶仙位 开空间 跪了</li>
<li>第三轮瑞士轮 vs bd O<br>  bd开卡包开到高罕太激动了 嘎啦没点防壁被装饰jjh谜拟Q秒了 然后就被谜拟Q杀穿了（感觉点了防壁也赢不了？）</li>
</ul>
<p>2-1勉强进半决赛</p>
<ul>
<li>半决赛 vs red O<br>  同样的首发 直接装饰jjh谜拟Q开干 霜奶仙退场后梦幻变身谜拟Q 两只谜拟Q杀穿了</li>
<li>决赛 vs 乌笔澄 bo3规则 OO<ul>
<li>第一轮首发谜拟Q+风妖精 对面咆哮虎+智挥猩 谜拟Q剑舞 风妖精被击掌触发按钮白给换上霜奶仙 再次霜奶仙配合jjh谜拟Q贯穿</li>
<li>第二轮对面首发垃圾之翼+毒电开顺风 还是被谜拟Q+霜奶仙秒了毒电 最后残局对面健康西施 我方残血霜奶仙+风妖精 霜奶仙给风妖精装饰后被打死 风妖精掉包换来了西施的背心 然后月爆对攻西施结束 拿下冠军</li>
</ul>
</li>
</ul>
<h4 id="Sentiment"><a href="#Sentiment" class="headerlink" title="Sentiment"></a>Sentiment</h4><p>没想到大部分钢属性幻兽的情况下这队表现能这么好！点名表扬谜拟Q 霜奶仙和风妖精. 真爱队胜利还是很开心的，以后再接再厉.</p>
<h4 id="Team"><a href="#Team" class="headerlink" title="Team:"></a>Team:</h4><p>有些配置记不清了，大概如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Mimikyu @ Babiri Berry  </span><br><span class="line">Ability: Disguise  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 160 Atk / 94 Def / 4 SpD  </span><br><span class="line">Adamant Nature  </span><br><span class="line">- Play Rough  </span><br><span class="line">- Shadow Sneak  </span><br><span class="line">- Swords Dance  </span><br><span class="line">- Shadow Claw  </span><br><span class="line"></span><br><span class="line">Alcremie @ Safety Goggles  </span><br><span class="line">Ability: Aroma Veil  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 74 Def / 4 SpA / 180 Spe  </span><br><span class="line">Timid Nature  </span><br><span class="line">- Decorate  </span><br><span class="line">- Dazzling Gleam  </span><br><span class="line">- Protect  </span><br><span class="line">- Helping Hand  </span><br><span class="line"></span><br><span class="line">Whimsicott @ Focus Sash  </span><br><span class="line">Ability: Prankster  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 6 SpD / 252 Spe  </span><br><span class="line">Timid Nature  </span><br><span class="line">IVs: 0 Atk  </span><br><span class="line">- Tailwind  </span><br><span class="line">- Endeavor  </span><br><span class="line">- Memento  </span><br><span class="line">- Helping Hand  </span><br><span class="line"></span><br><span class="line">Rotom-Heat @ Wiki Berry  </span><br><span class="line">Ability: Levitate  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 66 Def / 116 SpA / 76 Spe  </span><br><span class="line">Modest Nature  </span><br><span class="line">IVs: 0 Atk  </span><br><span class="line">- Thunderbolt  </span><br><span class="line">- Nasty Plot  </span><br><span class="line">- Protect  </span><br><span class="line">- Overheat  </span><br><span class="line"></span><br><span class="line">Hatterene-Gmax (F) @ Weakness Policy  </span><br><span class="line">Ability: Magic Bounce  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 4 Def / 252 SpA  </span><br><span class="line">Quiet Nature  </span><br><span class="line">IVs: 0 Atk  </span><br><span class="line">- Psychic  </span><br><span class="line">- Dazzling Gleam  </span><br><span class="line">- Calm Mind  </span><br><span class="line">- Trick Room  </span><br><span class="line"></span><br><span class="line">Mew @ Aguav Berry  </span><br><span class="line">Ability: Synchronize  </span><br><span class="line">Level: 50  </span><br><span class="line">EVs: 252 HP / 252 Spe  </span><br><span class="line">Jolly Nature  </span><br><span class="line">IVs: 30 Atk  </span><br><span class="line">- Tailwind  </span><br><span class="line">- Transform  </span><br><span class="line">- Fake Out  </span><br><span class="line">- Helping Hand  </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>

<hr>
<br>

]]></content>
      <tags>
        <tag>Pokemon</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>博客个性化笔记----基于Ocean</title>
    <url>/Learning/Blog/Blog-Personalization/</url>
    <content><![CDATA[<p>记录博客使用 <a href="https://github.com/zhwangart/hexo-theme-ocean">Oceon</a> 主题后进行的各项改动，<br>根据<a href="/Archive/The-First-Blog/">置顶◇代办◇与更新记录</a>记录的更新顺序排序.</p>
<p>封面 [ID:89138905]. </p>
<span id="more"></span>


<h3 id="更新首页视频"><a href="#更新首页视频" class="headerlink" title="更新首页视频"></a>更新首页视频</h3><p>在<code>/themes/ocean/source/images/ocean</code>中替换相关视频.<br>如果想替换文件名，打开<code>/themes/ocean/layout/_partial/ocean.ejs</code>，修改对应代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;video-media&quot;&gt;</span><br><span class="line">  &lt;video playsinline=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; data-autoplay=&quot;&quot; poster=&quot;&lt;%- theme.ocean.path %&gt;ocean.png&quot;</span><br><span class="line">    x5-video-player-type=&quot;h5&quot;&gt;</span><br><span class="line">    &lt;source src=&quot;&lt;%- theme.ocean.path %&gt;ocean.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class="line">    &lt;source src=&quot;&lt;%- theme.ocean.path %&gt;ocean.ogv&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class="line">    &lt;source src=&quot;&lt;%- theme.ocean.path %&gt;ocean.webm&quot; type=&quot;video/webm&quot;&gt;</span><br><span class="line">    &lt;p&gt;Your user agent does not support the HTML5 Video element.&lt;/p&gt;</span><br><span class="line">  &lt;/video&gt;</span><br><span class="line">  &lt;div class=&quot;video-overlay&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>将其中的文件名改为自己的文件名即可.</p>
<h3 id="开启Gallery功能"><a href="#开启Gallery功能" class="headerlink" title="开启Gallery功能"></a>开启Gallery功能</h3><p>按照<a href="https://zhwangart.com/2018/11/30/Ocean/#%E7%9B%B8%E5%86%8C">官方文档相关部分</a>进行设置.</p>
<p>添加照片:</p>
<p>打开<code>/source/gallery/index.md</code>，修改<strong>Front-matter</strong>部分：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line">author: YourName</span><br><span class="line">albums: [</span><br><span class="line">        [&quot;address of image1&quot;,&quot;description&quot;],</span><br><span class="line">        [&quot;address of image2&quot;,&quot;description&quot;],</span><br><span class="line">        [&quot;address of image3&quot;,&quot;description&quot;],</span><br><span class="line">        ]</span><br><span class="line">#date: Date</span><br><span class="line">#type: gallery</span><br><span class="line">#layout: &quot;gallery&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>如果操作完后无法正常显示照片，参考官方文档中的<a href="https://zhwangart.com/2019/07/02/Ocean-Issues/#2-9-%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%85%A2">改进图片加速方法</a>.</p>
<h3 id="新增Favorites页面"><a href="#新增Favorites页面" class="headerlink" title="新增Favorites页面"></a>新增Favorites页面</h3><ul>
<li><p>创建一个 <em>page</em> 命名 <em>favorites</em>：<br><code>$ hexo new page favorites</code></p>
</li>
<li><p>在 <code>/themes/_config.yml</code> 文件新增一个菜单：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">收藏: /favorites</span><br></pre></td></tr></table></figure></li>
</ul>
<p>-修改 <code>/themes/ocean/source/css/_partialnavbar.styl</code> 文件中应该是第 35 行，<em>favorites</em> ，展示收藏图标，注意顺序，如果对菜单顺序不理解，看<a href="https://zhwangart.com/2019/07/02/Ocean-Issues/#2">这里</a>.<br>编辑 favorites 页面，格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 样机 Mockups</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;card-quote&quot;&gt;</span><br><span class="line"></span><br><span class="line">&gt; ![Graphics](/images/logos/lstoreLogo.svg)</span><br><span class="line">&gt; #### Graphics</span><br><span class="line">&gt; 高质量的样机素材</span><br><span class="line">&gt; [https://www.ls.graphics](https://www.ls.graphics)</span><br><span class="line"></span><br><span class="line">&gt; ![sketchsheets](/images/logos/sketchLogo.svg)</span><br><span class="line">&gt; #### Sketchsheets</span><br><span class="line">&gt; Sketch 稿件的样机素材</span><br><span class="line">&gt; [https://sketchsheets.com](https://sketchsheets.com)</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="更新icon"><a href="#更新icon" class="headerlink" title="更新icon"></a>更新icon</h3><p>修改 <code>/themes/_config.yml</code> 文件，大约第10行:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Miscellaneous</span><br><span class="line">favicon: /filename.ico          #这里</span><br><span class="line">brand: /images/filename.png     #这里</span><br><span class="line"></span><br><span class="line"># Ocean Video</span><br><span class="line"># Because I put videos in multiple formats on the same path, I just labeled the path here.</span><br><span class="line">ocean:</span><br><span class="line">  overlay: true</span><br><span class="line">  path: /images/ocean/</span><br><span class="line">  brand: /images/filename.png   #这里</span><br></pre></td></tr></table></figure>
<p>分别将对应图片/图标放在<code>/themes/ocean/source</code>、<code>/themes/ocean/source</code>、<code>/themes/ocean/source/images</code>中.</p>
<h3 id="更新404页面"><a href="#更新404页面" class="headerlink" title="更新404页面."></a>更新404页面.</h3><p>直接更换<code>/themes/ocean/source/404.html</code>即可.<br>如果只想更换改主题404页面的图片，替换 <code>/themes/ocean/source/images/forrestgump.png</code>图片即可.</p>
<h3 id="背景添加动态线条效果"><a href="#背景添加动态线条效果" class="headerlink" title="背景添加动态线条效果"></a>背景添加动态线条效果</h3><p>在<code>/Hexo/themes/ocean/layout/layout.ejs</code>文件中添加如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;</span><br><span class="line">color=&quot;220,220,220&quot; opacity=&#x27;0.7&#x27; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>其中：<br>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）<br>opacity：表示线条透明度（0~1），默认：0.5 - count：表示线条的总数量，默认：150<br>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</p>
<ul>
<li>如果想要实现随机线条颜色效果，将上述代码中的链接内的代码拷贝至本地，将其中添加随机生成颜色代码后引用. 然后将color参数删除.<br>下面是我修改的随机颜色代码.<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function l() &#123;</span><br><span class="line">      var randomColor = Math.floor(Math.random() * 256) + &#x27;, &#x27; + Math.floor(Math.random() * 256) + &#x27;, &#x27; +Math.floor(Math.random() * 256)</span><br><span class="line">      var i = j(&quot;script&quot;),</span><br><span class="line">          w = i.length,</span><br><span class="line">          v = i[w - 1];</span><br><span class="line">      return &#123;</span><br><span class="line">          l: w,</span><br><span class="line">          z: o(v, &quot;zIndex&quot;, - 1),</span><br><span class="line">          o: o(v, &quot;opacity&quot;, 0.5),</span><br><span class="line">          c: o(v, &quot;color&quot;, randomColor),</span><br><span class="line">          n: o(v, &quot;count&quot;, 99)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="添加点击特效"><a href="#添加点击特效" class="headerlink" title="添加点击特效"></a>添加点击特效</h3><p>参考文章<a href="https://blog.csdn.net/qq_43562785/article/details/109511585">纯Javascript实现鼠标点击特效（烟花特效）</a>.</p>
<p>在<code>/Hexo/themes/ocean/layout/layout.ejs</code>文件中添加如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击特效--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/click.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在目录<code>/themes/ocean/source/js</code>中新建文件<code>click.js</code>，填入参考文章中的代码.</p>
<ul>
<li>如果想要自定义颜色，修改代码中数组<code>const colours = [&quot;色值1&quot;, &quot;色值2&quot;, &quot;色值3&quot;, &quot;色值4&quot;, &quot;色值5&quot;];</code>中色值即可.</li>
</ul>
<h3 id="添加博客隐藏功能"><a href="#添加博客隐藏功能" class="headerlink" title="添加博客隐藏功能"></a>添加博客隐藏功能</h3><p>参考<a href="https://github.com/prinsss/hexo-hide-posts/blob/master/README_ZH.md">hexo-hide-posts官方文档</a></p>
<h3 id="修复Category页面无法正确显示标题的错误"><a href="#修复Category页面无法正确显示标题的错误" class="headerlink" title="修复Category页面无法正确显示标题的错误"></a>修复Category页面无法正确显示标题的错误</h3><p>研究完才发现有人已经pr过了，详见<a href="https://github.com/zhwangart/hexo-theme-ocean/pull/35/files">修复主题关于catefories和tags页显示网页标题为underfine问题</a>.</p>
<h3 id="加入博客评论功能"><a href="#加入博客评论功能" class="headerlink" title="加入博客评论功能"></a>加入博客评论功能</h3><p>详见<a href="https://zhwangart.com/2018/11/30/Ocean/#%E8%AF%84%E8%AE%BA">Ocean官方文档相关部分</a>.<br>此博客仅使用了Gitalk.</p>
<h3 id="实现图片懒加载"><a href="#实现图片懒加载" class="headerlink" title="实现图片懒加载"></a>实现图片懒加载</h3><p>使用Hexo插件<a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a>实现.</p>
<ul>
<li><p>运行代码<code>$ npm install hexo-lazyload-image --save</code></p>
</li>
<li><p>在 <code>/themes/_config.yml</code> 文件末尾加上以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">enable: true</span><br><span class="line">onlypost: false # optional</span><br><span class="line">loadingImg: # optional eg ./images/loading.gif 这里填写你的懒加载图片地址，请提前将其放在博客图片库中.</span><br><span class="line">isSPA: false # optional</span><br><span class="line">preloadRatio: 3 # optional, default is 1</span><br></pre></td></tr></table></figure></li>
<li><p>配置相关参数：</p>
<ul>
<li><p>onlypost<br>If true, only the images from post or page will support lazy-load.<br>If false, the whole images of your site will use lazy-load, including the images dist from your theme, but not including the background images from CSS style.</p>
</li>
<li><p>loadingImg<br>If you keep the value nothing (by default), then it will use the default loading image.<br>If you want to customize the image, then you need to copy your loading image to your current theme image folder and then change this path to find it.</p>
</li>
<li><p>isSPA<br>For performance considering, isSPA is added. If your theme is a SPA page, please set it as true to make the lazy loading works,<br>If true, searching for each image during scrolling to support SPA page,<br>If false (default value), the performance would be the best.</p>
</li>
<li><p>preloadRatio<br>This option is for a better experience and default value is 1.<br>This ratio means to pre-load the images where is within how many ratios than current screen size, even these images are not in current view point.</p>
</li>
</ul>
</li>
<li><p>取消不需要的图片懒加载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img no-lazy src=&quot;abc.png&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>以 Ocean 主题为例，<br>修改<code>/themes/ocean/layout/_partial/ocean.ejs</code>中所有<code>&lt;img&gt;</code>标签,<br>修改<code>/themes/ocean/layout/_partial/sidebar.ejs</code>中所有<code>&lt;img&gt;</code>标签.</p>
</li>
</ul>
<h3 id="增加博客加密功能"><a href="#增加博客加密功能" class="headerlink" title="增加博客加密功能"></a>增加博客加密功能</h3><p>参考<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt官方文档</a>.<br>按钮样式修改在<code>/node_modules/hexo-blog-encrypt/lib/hbe.style.css</code>中.</p>
<h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>如果你有什么别的更好的个性化方案，请<a href="/about/">与我联系</a>，一同进步！</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Practical-Tips</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Ocean</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo与GitHub制作私人博客</title>
    <url>/Learning/Blog/Build-Your-Own-Blog-Like-This-One/</url>
    <content><![CDATA[<p>想要搭建自己的博客？跟着这篇文章做下去，谜拟Q都能搭出私人博客！</p>
<p>以此文章记录丘丘Blog的制作过程.</p>
<p>封面 [ID:91018415]. </p>
<span id="more"></span>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>注意，这篇仅针对Windows用户，如果你的系统是Mac或者Linux，请参考<a href="https://hexo.io/zh-cn/docs/">官方文档</a>.</strong></p>
<p>说实话我做Blog就是为了记录分享，最重要的是很有意思，捣鼓捣鼓出来很有成就感.<br>不过我觉得这篇知乎专栏写的很不错，有兴趣的可以看看.</p>
<p><a href="https://zhuanlan.zhihu.com/p/19743861">为什么你要写博客？ - 陈素封的文章 - 知乎</a></p>
<p>接下来我将记录一下这个博客的搭建与完善过程. </p>
<p>谜拟Q都能看懂的博客搭建教程 开工！</p>
<h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p>这部分主要实现博客的从无到有，是做成自己独一无二博客的基础.</p>
<h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><h3 id="注册-GitHub-账号"><a href="#注册-GitHub-账号" class="headerlink" title="注册 GitHub 账号"></a>注册 GitHub 账号</h3><p>这个很简单，<a href="https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=/&source=header-home">点击这里</a>来创建 GitHub 账号. </p>
<h3 id="在个人主界面里选择创建一个新的-Repository"><a href="#在个人主界面里选择创建一个新的-Repository" class="headerlink" title="在个人主界面里选择创建一个新的 Repository"></a>在个人主界面里选择创建一个新的 <em>Repository</em></h3><p><em>Repository name</em> 处填写 <code>username.github.io</code>. 其中 <em>username</em> 是你的 GitHub 用户名.<br><strong>请勾选 <em>Add a README file</em> 选项.</strong><br><img src="/images/body/Build-Your-Own-Blog-Like-This-One/Figure1.png" alt="Figure1"></p>
<blockquote>
<p>图中因为我已经创建过了，所以会报错.</p>
</blockquote>
<p>创建后默认自动启用 HTTPS，博客地址为：<a href="https://username.github.io/">https://username.github.io</a>. 其中 <em>username</em> 是你的 GitHub 账号名. （不过可能进去没啥东西）</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>Hexo 基于 Node.js，搭建过程中还需要使用 <code>npm</code>（Node.js 已带） 和 <code>git</code>，因此先搭建本地操作环境，安装 Node.js 和 Git.</p>
<blockquote>
<p>这里我全部按默认配置完成安装</p>
</blockquote>
<h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>访问 <a href="https://nodejs.org/en/">Node.js 官方网站</a>下载并安装Node.js . 这里我选择的是LTS版本（16.13.1），当前 <a href="ttps://hexo.io/zh-cn/docs/">Hexo 官方文档</a>建议 Node.js 版本高于12.0.0，可随时确认.</p>
<blockquote>
<p>此外，使用 Node.js 官方安装程序时，请确保勾选 <em>Add to PATH</em> 选项（默认已勾选）</p>
<p>安装完成后，组合键<kbd>Win</kbd>+<kbd>R</kbd> 输入 <code>cmd</code> 并打开，依次输入 <code>node -v</code>、<code>npm -v</code>并回车，如下图出现程序版本号即安装成功.</p>
</blockquote>
<p><img src="/images/body/Build-Your-Own-Blog-Like-This-One/Figure2.png" alt="Figure2"></p>
<h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p>访问 <a href="https://git-scm.com/download/win">Git 官方下载地址</a>下载并安装 Git.</p>
<blockquote>
<p>安装完成后，组合键 <kbd>Win</kbd>+<kbd>R</kbd> 输入 <code>cmd</code> 并打开，输入 <code>git --version</code>、并回车，如下图出现程序版本号即安装成功.</p>
</blockquote>
<p><img src="/images/body/Build-Your-Own-Blog-Like-This-One/Figure3.png" alt="Figure3"></p>
<h2 id="连接-GitHub"><a href="#连接-GitHub" class="headerlink" title="连接 GitHub"></a>连接 GitHub</h2><p>打开 <em>Git Bash</em> ，输入以下代码设置用户名和邮箱：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>用自己的 GitHub 用户名与邮箱替代代码中的相应部分.</p>
</blockquote>
<h3 id="创建-SSH-密钥"><a href="#创建-SSH-密钥" class="headerlink" title="创建 SSH 密钥"></a>创建 SSH 密钥</h3><p>继续输入代码<code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code> 然后一路回车.</p>
<h3 id="添加密匙"><a href="#添加密匙" class="headerlink" title="添加密匙"></a>添加密匙</h3><p>进入 &lt;C:\Users\用户名\.ssh&gt; 目录（可能需要勾选显示“隐藏的项目”），用记事本打开公钥 <em>id_rsa.pub</em> 文件并复制里面的内容.</p>
<p>登陆 GitHub ，进入个人 <em>Settings</em> 页面，选择左边栏的 <em>SSH and GPG keys</em> ，点击 <em>New SSH key</em>.</p>
<p>Title 随便填写一个名字，将 <em>id_rsa.pub</em> 内容复制粘贴到 Key 中，点击 <em>Add SSH key</em> 完成添加.<br><img src="/images/body/Build-Your-Own-Blog-Like-This-One/Figure4.png" alt="Figure4"></p>
<h3 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h3><p>打开 <em>Git Bash</em>，输入 <code>ssh -T git@github.com</code> 出现 <em><strong>“Are you sure……”</strong></em> 字样时，输入 <em>yes</em> 并回车确认.</p>
<p>显示 <em><strong>“Hi xxx! You’ve successfully……”</strong></em> 即连接成功.</p>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>在喜欢的位置创建一个空文件夹，打开 <em>Git Bash</em> 利用 <code>cd</code> 命令移动至此文件夹.</p>
<blockquote>
<p>之后若无特殊说明则将此文件夹称为根目录</p>
</blockquote>
<p>输入 <code>npm install -g hexo-cli</code> 回车进行安装.</p>
<p>安装完成后输入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init   #初始化 hexo</span><br><span class="line">hexo g  # 生成页面</span><br><span class="line">hexo s  # 启用预览，默认端口4000</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://localhost:4000/">http://localhost:4000</a>，出现 Hexo 默认页面，则本地博客安装成功.</p>
<blockquote>
<p>使用组合键 <kbd>Ctrl</kbd>+<kbd>C</kbd> 来关闭本地预览服务.</p>
<p>若组合键 <kbd>Ctrl</kbd>+<kbd>C</kbd> 没有效果，可打开 <em>cmd</em> 运行 <code>taskkill /f /t /im node.exe</code> 来关闭服务.</p>
<p>如果出现页面加载不出来，可能是端口被占用了. 组合键 <kbd>Ctrl</kbd>+<kbd>C</kbd> 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号为5000后重试.</p>
</blockquote>
<p>Hexo 博客文件夹目录结构如下：(图源水印)<br><img src="/images/body/Build-Your-Own-Blog-Like-This-One/Figure5.jpg" alt="Figure5"></p>
<h2 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h2><p>在 <em>Git Bash</em> 中运行 <code>npm install hexo-deployer-git --save</code>.</p>
<p>打开根目录，找到文件 <em>_config.yml</em> 并打开，修改文件末尾的 Deployment 部分为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
<blockquote>
<p>用自己的 GitHub 用户名替换代码相应部分</p>
</blockquote>
<p>接着，在 <em>Git Bash</em> 中运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d  # 部署博客</span><br></pre></td></tr></table></figure>

<p>这时访问自己的 GitHub 域名 <a href="https://username.github.io/">https://username.github.io</a> 就可以看到 Hexo 网站了. </p>
<p><br><br><br>到这里私人博客的搭建就差不多了，接下来便是去安装 hexo 的<a href="https://hexo.io/themes/">主题</a>与<a href="https://hexo.io/plugins/">插件</a>了.</p>
<h1 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h1><p>这部分将你的博客个性化，来创造自己独一无二的博客吧！</p>
<h2 id="选择并安装主题"><a href="#选择并安装主题" class="headerlink" title="选择并安装主题"></a>选择并安装主题</h2><p>在 <a href="https://hexo.io/themes/">Themes | Hexo</a> 选择一个喜欢的主题，按照官方文档进行安装即可. 这里我选择的是 <a href="https://zhwangart.com/2018/11/30/Ocean/">Ocean 主题</a>.</p>
<p>因为官方文档的步骤都十分详细，因此这里不展开细说. 一般主题所需的插件也会在官方文档中提供安装与使用方法.</p>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>跟着官方文档做下去，再按照自己的需求更改，个性化的博客便做好了.<br>可以参考这篇文章<a href="/Learning/Blog/Blog-Personalization/">博客个性化笔记—-基于Ocean</a>.</p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://www.zhihu.com/question/20962496/answer/677815713">如何在 GitHub 上写博客？ - 少数派的回答 - 知乎</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - crystal的文章 - 知乎</a></p>
<p><a href="https://hexo.io/zh-cn/docs/">Hexo 官方中文文档</a></p>
<p><a href="https://zhwangart.com/2018/11/30/Ocean/">Ocean 官方文档</a></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Practical-Tips</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Ocean</tag>
      </tags>
  </entry>
  <entry>
    <title>解决访问GithHub速度慢的问题</title>
    <url>/Learning/Solutions/Accessing-GitHub-Slowly-Solution/</url>
    <content><![CDATA[<p>今天早上上 GitHub 又没上上去，去网上找了一下原因是 GitHub 的 CDN 域名遭到了 DNS 污染，导致无法连接使用 GitHub 的加速分发服务器，才使得国内访问速度很慢.</p>
<p>可以通过修改本地 <code>hosts</code> 文件来绕过 DNS 解析来加速.</p>
<p>封面 [ID:46018784]. </p>
<span id="more"></span>
<ul>
<li><p>首先打开<a href="http://tool.chinaz.com/dns/">站长工具</a></p>
</li>
<li><p>填入 &lt;Github.com&gt;<br><img src="/images/body/Accessing-GitHub-Slowly-Solution/Figure1.png" alt="Figure1" title="在 请输入域名 栏填写"></p>
</li>
<li><p>将检测列表里的 TTL 值最小的 IP 记为 <em>a.b.c.d</em>.</p>
</li>
<li><p>使用记事本打开 <code>hosts</code> 文件，位于 &lt;C:\Windows\System32\drivers\etc&gt;.</p>
</li>
<li><p>将以下内容加在 <code>host</code> 文件末尾：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.b.c.d www.github.com</span><br><span class="line">a.b.c.d github.global.ssl.fastly.net</span><br><span class="line">a.b.c.d nodeload.github.com</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中 <em>a.b.c.d</em> 是上述步骤中记录的 IP 地址.<br>如果没有修改权限可以将 <code>host</code> 文件移出该文件夹，修改完成后再移回去.<br>系统会确认你授权管理员权限.<br><img src="/images/body/Accessing-GitHub-Slowly-Solution/Figure2.png" alt="Figure2" title="系统向确认你授权管理员权限"></p>
</blockquote>
</li>
<li><p><em>cmd</em> 输入命令 <code>ipconfig /flushdns</code> 刷新DNS缓存.</p>
</li>
<li><p>Done！试试访问GitHub吧！</p>
</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/CS13477062349/article/details/88020283?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.no_search_link&spm=1001.2101.3001.4242.1">完美解决打开github速度慢的问题</a></p>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Practical-Tips</tag>
        <tag>GitHub</tag>
        <tag>Solutions</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记01----基本数据类型</title>
    <url>/Learning/Notes/PyTorch/PyTorch01/</url>
    <content><![CDATA[<p>PyTorch基本数据类型</p>
<span id="more"></span>


<table>
<thead>
<tr>
<th align="center">python</th>
<th align="center">PyTorch</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Int</td>
<td align="center">IntTensor of size()</td>
</tr>
<tr>
<td align="center">Float</td>
<td align="center">FloatTensor of size()</td>
</tr>
<tr>
<td align="center">Int array</td>
<td align="center">IntTensor of size[d1, d2, …]</td>
</tr>
<tr>
<td align="center">Float array</td>
<td align="center">FloatTensor of size[d1, d2, …]</td>
</tr>
<tr>
<td align="center">String</td>
<td align="center">–</td>
</tr>
</tbody></table>
<blockquote>
<p>Pytorch不是一个完备的语言库，不支持String.</p>
</blockquote>
<h3 id="How-to-denote-string"><a href="#How-to-denote-string" class="headerlink" title="How to denote string"></a>How to denote string</h3><ul>
<li>One-hot Encoding<br>[0, 1, 0, 0, …]<br>每一维代表一个单词<blockquote>
<p>数据量过大时，整个向量会变得特别稀疏.<br>不同的单词有相近的意思，如like、love，这种方法无法体现这种相关性.</p>
</blockquote>
</li>
<li>Embedding<ul>
<li>Word2vec</li>
<li>glove</li>
</ul>
</li>
</ul>
<h3 id="Data-type"><a href="#Data-type" class="headerlink" title="Data type"></a>Data type</h3><p>CPU tensor: </p>
<ul>
<li>torch.FloatTensor</li>
<li>torch.IntTensor</li>
<li>…</li>
</ul>
<p>GPU tensor: 在torch与tensor之间加上cuda</p>
<ul>
<li>torch.cuda.FloatTensor</li>
<li>torch.cuda.IntTensor</li>
<li>…</li>
</ul>
<h2 id="Type-check"><a href="#Type-check" class="headerlink" title="Type check"></a>Type check</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.randn(2, 3)   #使用随机正态分布</span><br><span class="line">a.type()    #&#x27;torch.FloatTensor&#x27;</span><br><span class="line"></span><br><span class="line">type(a)     #&#x27;torch.Tensor&#x27;返回基本的数据类型</span><br><span class="line"></span><br><span class="line">isinstance(a, torch.FloatTensor)    #True</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">isinstance(data, torch.cuda.DoubleTensor)   #False</span><br><span class="line">data = data.cuda()</span><br><span class="line">isinstance(data, torch.cuda.DoubleTensor)   #True</span><br></pre></td></tr></table></figure>

<h2 id="Dimension-0-Rank-0-标量"><a href="#Dimension-0-Rank-0-标量" class="headerlink" title="Dimension 0 / Rank 0 标量"></a>Dimension 0 / Rank 0 标量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.tensor(1.)    #直接生成标量Tensor(1.)</span><br><span class="line">torch.tensor(1.3)   #直接生成标量tensor(1.300)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>经常用于计算<em>Loss</em> — 维度为0的标量.</p>
</blockquote>
<p>如何确定Dim为0？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Loss.shape  #torch.Size([])</span><br><span class="line"></span><br><span class="line">len(Loss.shape) #0</span><br><span class="line"></span><br><span class="line">Loss.dim()  #0</span><br><span class="line"></span><br><span class="line">Loss.size() #torch.Size([])</span><br></pre></td></tr></table></figure>

<h2 id="Dimension-1-Rank-1-向量"><a href="#Dimension-1-Rank-1-向量" class="headerlink" title="Dimension 1 / Rank 1 向量"></a>Dimension 1 / Rank 1 向量</h2><blockquote>
<p>PyTorch里一维多维向量统称tensor张量</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.tensor([1.1])     #tensor([1.1000]) 注意有中括号</span><br><span class="line">torch.tensor([1.1, 2.2])    #tensor([1.1000, 2.2000])</span><br><span class="line"></span><br><span class="line">torch.FloatTensor(1)    #tensor([3.2239e-25]) 指定长度，random初始化</span><br><span class="line">torch.FloatTensor(2)    #tensor([3.2239e-25, 4.5915e-41])</span><br><span class="line"></span><br><span class="line">#还可以通过numpy引入</span><br><span class="line">data = np.ones(2)       #生成一个[1, 1]的向量</span><br><span class="line">data        #array([1., 1.])</span><br><span class="line"></span><br><span class="line">torch.from_numpy(data)  #tensor([1., 1.], dtype=torch.float64)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Dim 1的张量一般用于Bias（偏置）、Linear Input（神经网络线性层的输入）（如[28, 28]的图片展开成[748]长度的向量输入）.</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.ones(2)</span><br><span class="line">a.shape     #torch.Size([2])</span><br><span class="line">a.size()    #torch.Size([2])</span><br></pre></td></tr></table></figure>

<h2 id="Dimension-2、Dimension-3、……"><a href="#Dimension-2、Dimension-3、……" class="headerlink" title="Dimension 2、Dimension 3、……"></a>Dimension 2、Dimension 3、……</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.randn(2,3)</span><br><span class="line">a       #tensor([[-0.4423, 0.5949, 1.1440],</span><br><span class="line">                 [-2.0935, 0.2051, 1.2781]])</span><br><span class="line">                 </span><br><span class="line">a.shape #torch.Size([2,3])</span><br><span class="line">a.size(0)   #2 第一个维度的长度</span><br><span class="line">a.shape[0]  #2</span><br><span class="line">a.size(1)   #3 第二个维度的长度</span><br><span class="line">a.shape[1]  #3</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Dim 2的张量一般用于Linear Input batch（如4张[28, 28]的图片，我们将它们叠在一起，形成[4, 784]，4表示4张照片，784表示一张照片的数据）</p>
</blockquote>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(1,2,3)   #使用随机均匀分布</span><br><span class="line">a   #tensor([[[0.0764, 0.2590, 0.9816],</span><br><span class="line">              [0.6798, 0.1568, 0.7919]]])</span><br><span class="line"></span><br><span class="line">a.shape #torch.Size([1, 2, 3])</span><br><span class="line"></span><br><span class="line">a[0]    #tensor([[0.0764, 0.2590, 0.9816],</span><br><span class="line">                 [0.6798, 0.1568, 0.7919]])</span><br><span class="line">            </span><br><span class="line">list(a.shape)   #[1, 2, 3]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Dim 3在RNN Input Batch中使用非常广泛：<br>一句话有10个单词，每个单词用一个100维的One-hot编码，一次送入20句话，就是[10, 20, 100]</p>
</blockquote>
<blockquote>
<p>Dim 4适合彩色图片：<br>[2, 3, 28, 28] 2张图片，3个通道（RGB，如果是黑白图片则是1），28*28像素的图片</p>
</blockquote>
<pre><code>a = torch.rand(2, 3, 28, 28)

a.dim() #4
a.numel()   #4704 4704 = 2 * 3 * 28 * 28
</code></pre>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记02----创建Tensor</title>
    <url>/Learning/Notes/PyTorch/PyTorch02/</url>
    <content><![CDATA[<p>PyTorch各种创建Tensor方式</p>
<span id="more"></span>

<h4 id="import-from-numpy"><a href="#import-from-numpy" class="headerlink" title="import from numpy"></a>import from numpy</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = np.array([2, 3.3])</span><br><span class="line">torch.from_numpy(a) #tensor([2.000, 3.300], dtype = torch.float64)</span><br><span class="line"></span><br><span class="line">a = np.ones([2, 3])</span><br><span class="line">torch.from_numpy(a) #tensor([[1., 1., 1.],</span><br><span class="line">                             [1., 1., 1.]], dtype = torch.float64)</span><br></pre></td></tr></table></figure>

<h4 id="import-from-list"><a href="#import-from-list" class="headerlink" title="import from list"></a>import from list</h4><blockquote>
<p>torch承载的参数是现成的数据：numpy或者list<br>Torch、FloatTensor接收shape作为参数，生成一个没有初始化的类型. 或使用list来接收现有数据（不建议）.</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.tensor([2, 3.2])  #tensor([2.0000, 3.2000])</span><br><span class="line"></span><br><span class="line">torch.FloatTensor([2., 3.2])    #tensor([2.0000, 3.2000])</span><br><span class="line"></span><br><span class="line">torch.tensor([[2., 3.2],[1., 22.3]])</span><br></pre></td></tr></table></figure>

<h4 id="uninitialized"><a href="#uninitialized" class="headerlink" title="uninitialized"></a>uninitialized</h4><ul>
<li>torch.empty(d1, d2)</li>
<li>torch.FloatTensor(d1, d2, d3)</li>
<li>torch.IntTensor(d1, d2, d3)</li>
</ul>
<blockquote>
<p>要把未初始化的数据覆盖掉，如果出现torch.nan或者torch.inf，可能就是使用了未初始化的数据.</p>
</blockquote>
<h4 id="set-default-type"><a href="#set-default-type" class="headerlink" title="set default type"></a>set default type</h4><blockquote>
<p>一般使用Tensor默认是FloatTensor</p>
</blockquote>
<p>使用<code>torch.set_default_tensor_type(torch.DoubleTensor)</code>来改变默认类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.tensor([1.2, 3]).type #&#x27;torch.FloatTensor&#x27;</span><br><span class="line">torch.set_default_tensor_type(torch.DoubleTensor)</span><br><span class="line">torch.tensor([1.2, 3]).type #&#x27;torch.DoubleTensor&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="rand-rand-like-randint"><a href="#rand-rand-like-randint" class="headerlink" title="rand/rand_like, randint"></a>rand/rand_like, randint</h4><ul>
<li><p>rand 随机使用[0, 1]均匀分布</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.rand(3, 3)    #按均匀分布生成3*3shape的随机张量</span><br></pre></td></tr></table></figure></li>
<li><p>rand_like 接受的参数是一个tensor，生成一个和其shape相同的随机张量 </p>
<blockquote>
<p>*_like</p>
</blockquote>
</li>
<li><p>randint(min, max, [shape])，左闭右开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">randint(1, 10, [3, 3])</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="randn-标准正态分布"><a href="#randn-标准正态分布" class="headerlink" title="randn 标准正态分布"></a>randn 标准正态分布</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.randn(3, 3)    #按标准正态分布生成3*3shape的随机张量</span><br></pre></td></tr></table></figure>

<p>如果想自定义均值和方差，使用normal生成一维张量后reshape</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.normal(mean = torch.full([10], 0), std = torch.arange(1, 0, -0.1)) </span><br><span class="line">#torch.full([10], 0)生成一个10*1的全0张量</span><br><span class="line">#均值为0，方差依次递减[1, 0.9, ...]</span><br></pre></td></tr></table></figure>

<h4 id="full"><a href="#full" class="headerlink" title="full"></a>full</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.full([2, 3], 7)   #tensor([[7., 7., 7.],</span><br><span class="line">                                 [7., 7., 7.])</span><br><span class="line">torch.full([], 7)   #tensor(7.)</span><br></pre></td></tr></table></figure>

<h4 id="arange-range"><a href="#arange-range" class="headerlink" title="arange / range"></a>arange / range</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.arange(0, 4)   #tensor([0, 1, 2, 3])</span><br><span class="line">torch.arange(0, 4, 2)   #ensor([0, 2])</span><br><span class="line">torch.range(0, 4)   #tensor([0, 1, 2, 3, 4]) 不建议使用range</span><br></pre></td></tr></table></figure>
<h4 id="linspace-logspace"><a href="#linspace-logspace" class="headerlink" title="linspace / logspace"></a>linspace / logspace</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.linspace(0, 10, steps = 4)    #第三个参数是数量</span><br><span class="line">#tensor([0.0000, 3.3333, 6.6666, 10.0000])</span><br><span class="line"></span><br><span class="line">torch.logspace(0, -1, steps = 10)   #相当于linspace生成的这些数作为10的幂</span><br><span class="line">#tensor([1.0000, 0.7743, ..., 0.1000])</span><br></pre></td></tr></table></figure>

<h4 id="Ones-Zeros-Eye"><a href="#Ones-Zeros-Eye" class="headerlink" title="Ones / Zeros / Eye"></a>Ones / Zeros / Eye</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.ones(2, 2)</span><br><span class="line">#tensor([[1, 1],</span><br><span class="line">         [1, 1])</span><br><span class="line">         </span><br><span class="line">torch.zeros(2, 2)</span><br><span class="line">#tensor([[0, 0],</span><br><span class="line">         [0, 0])</span><br><span class="line">         </span><br><span class="line">torch.eye(2, 3)</span><br><span class="line">#tensor([[1, 0, 0],</span><br><span class="line">         [0, 1, 0])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.eye(3)</span><br><span class="line">#tensor([[1, 0, 0],</span><br><span class="line">         [0, 1, 0],</span><br><span class="line">         [0, 0, 1]])</span><br><span class="line"></span><br><span class="line">a = torch.zeros(3, 3)</span><br><span class="line">torch.ones_like(a)</span><br><span class="line">#tensor([[1, 1, 1],</span><br><span class="line">         [1, 1, 1],</span><br><span class="line">         [1, 1, 1]])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>eye最多两个参数</p>
</blockquote>
<h4 id="randperm"><a href="#randperm" class="headerlink" title="randperm"></a>randperm</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.randperm(10)</span><br><span class="line">#tensor([1, 5, 4, 2, 0, 6, 3, 9, 7, 8]) 生成随机索引</span><br></pre></td></tr></table></figure>
<ul>
<li>random.shuffle<blockquote>
<p>为了保持配对</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(2, 3)</span><br><span class="line">b = torch.rand(2, 2)</span><br><span class="line">idx = torch.randperm(2)</span><br><span class="line">idx #tensor([1, 0])</span><br><span class="line"></span><br><span class="line">a[idx]</span><br><span class="line">b[idx]</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记03----索引与切片</title>
    <url>/Learning/Notes/PyTorch/PyTorch03/</url>
    <content><![CDATA[<p>PyTorch中的索引与切片.</p>
<span id="more"></span>

<h2 id="Indexing"><a href="#Indexing" class="headerlink" title="Indexing"></a>Indexing</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 3, 28, 28)</span><br><span class="line"></span><br><span class="line">a[0].shape      #torch.Size([3, 28, 28])</span><br><span class="line">a[0, 0].shape   #torch.Size([28, 28])</span><br><span class="line">a[0, 0, 2, 4]   #tensor(0.8082)</span><br></pre></td></tr></table></figure>

<h2 id="select-first-last-N"><a href="#select-first-last-N" class="headerlink" title="select first / last N"></a>select first / last N</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.shape         #torch.Size([4, 3, 28, 28])</span><br><span class="line">a[:2].shape     #torch.Size([2, 3, 28, 28]) 左闭右开</span><br><span class="line">a[:2, :1, :,:]  #torch.Size([2, 1, 28, 28])</span><br><span class="line">a[:2, 1:, :,:]  #torch.Size([2, 2, 28, 28])</span><br><span class="line">a[:2, -1:, :,:] #torch.Size([2, 1, 28, 28])</span><br></pre></td></tr></table></figure>


<h2 id="select-by-steps"><a href="#select-by-steps" class="headerlink" title="select by steps"></a>select by steps</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[:, :, 0:28:2, 0:28:2].shape</span><br><span class="line">#torch.Size([4, 3, 14, 14]) 后两个维度每两个取一个，2是step</span><br><span class="line">a[:, :, ::2, ::2].shape     #与上面的等价</span><br></pre></td></tr></table></figure>
<blockquote>
<p>同Python切片</p>
</blockquote>
<h3 id="select-by-specific-index"><a href="#select-by-specific-index" class="headerlink" title="select by specific index"></a>select by specific index</h3><ul>
<li>index_select() 第一个参数表示操作的维度，第二个参数直接给索引号（必须是Tensor）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.index_select(0, torch.Tensor([0, 2])).shape</span><br><span class="line">#torch.Size([2, 3, 28, 28])</span><br><span class="line">a.index_select(1, torch.Tensor([1, 2])).shape</span><br><span class="line">#torch.Size([4, 2, 28, 28])</span><br><span class="line"></span><br><span class="line">a.index_select(2, torch.arange(8)).shape</span><br><span class="line">#torch.Size([4, 3, 8, 28])</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="select-by"><a href="#select-by" class="headerlink" title="select by ..."></a>select by <code>...</code></h3><blockquote>
<p><code>...</code>代表任意维度，贪心匹配（？）</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[...].shape            #等价于a[:, :, :, :].shape</span><br><span class="line">a[0, ...].shape         #等价于a[0].shape</span><br><span class="line">a[0,...,::2].shape      #torch.Size([1, 3, 28, 14])</span><br><span class="line">a[:, 1, ...].shape      #torch.Size([4, 1, 28, 28])</span><br></pre></td></tr></table></figure>

<h3 id="select-by-mask"><a href="#select-by-mask" class="headerlink" title="select by mask"></a>select by mask</h3><blockquote>
<p>使用掩码选择，会打平数据，用的不多</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x = torch.randn(3, 4)</span><br><span class="line">#tensor([[-1.3911, -0.7871, -1.6558, -0.2542],</span><br><span class="line">         [-0.9011,  0.5404, -0.6612,  0.3917],</span><br><span class="line">         [-0.3854,  0.2968,  0.6040,  1.5771]])</span><br><span class="line">         </span><br><span class="line">mask = x.ge(0.5)        #大于等于0.5的记为1</span><br><span class="line">#tensor([[0, 0, 0, 0],</span><br><span class="line">         [0, 1, 0, 0],</span><br><span class="line">         [0, 0, 1, 1]], dtype = torch.uint8)</span><br><span class="line">         </span><br><span class="line">torch.masked_select(x, mask)</span><br><span class="line">#tensor([0.5404, 0.6040, 1.5771])</span><br><span class="line">torch.masked_select(x, mask).shape</span><br><span class="line">#torch.Size([3]) 与原shape无关</span><br></pre></td></tr></table></figure>

<h3 id="select-by-flatten-index"><a href="#select-by-flatten-index" class="headerlink" title="select by flatten index"></a>select by flatten index</h3><ul>
<li>take函数也会打平数据，用的不多</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src = torch.tensor([[4, 3, 5],</span><br><span class="line">                    [6, 7, 8]])</span><br><span class="line">torch.take(src, torch.tensor([0, 2, 5]))</span><br><span class="line">#tensor([4, 5, 8])</span><br><span class="line">#[2, 3]先打平成[6]，再选index为0，2，5的数据</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记04----Tensor维度变换</title>
    <url>/Learning/Notes/PyTorch/PyTorch04/</url>
    <content><![CDATA[<p>PyTorch的一些Tensor维度变换方式</p>
<span id="more"></span>

<h3 id="View-Reshape"><a href="#View-Reshape" class="headerlink" title="View / Reshape"></a>View / Reshape</h3><blockquote>
<p>通用，要有物理意义，否则是污染数据</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 1, 28, 28)</span><br><span class="line">a.shape         #torch.Size([4, 1, 28, 28])</span><br><span class="line"></span><br><span class="line">a.view(4, 28 * 28).shape        #torch.Size([4, 784])</span><br><span class="line">#特别适合全连接层</span><br><span class="line"></span><br><span class="line">b = a.view(4, 784)      #会丢失原来的维度信息</span><br><span class="line">b.view(4, 28, 28, 1)    #造成了数据污染</span><br></pre></td></tr></table></figure>

<ul>
<li>Flewible but prone to corrupt<br>如果view的size不同，会报错<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.view(4, 783)</span><br><span class="line">--------Error--------</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Squeeze-Unsqueeze"><a href="#Squeeze-Unsqueeze" class="headerlink" title="Squeeze / Unsqueeze"></a>Squeeze / Unsqueeze</h3><h4 id="Unsqueeze"><a href="#Unsqueeze" class="headerlink" title="Unsqueeze"></a>Unsqueeze</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.shape         #torch.Size([4, 1, 28, 28])</span><br><span class="line"></span><br><span class="line">a.unsqueeze(0).shape    #torch.Size([1, 4, 1, 28, 28]) 在位置0处增加一维</span><br><span class="line"></span><br><span class="line">a.unsqueeze(-1).shape   #torch.Size([4, 1, 28, 28, 1])</span><br><span class="line"></span><br><span class="line">a.unsqueeze(5).shape</span><br><span class="line">---------Error--------</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.tensor([1.2, 2.3])</span><br><span class="line">a.unsqueeze(-1)</span><br><span class="line">#tensor([[1.2000],</span><br><span class="line">         [2.3000]])</span><br><span class="line">#shape由[2]变为[2,1]</span><br><span class="line"></span><br><span class="line">a.unsqueeze(0)</span><br><span class="line">#tensor([[1.2000, 2.3000]])</span><br><span class="line">#shape由[2]变为[1,2]</span><br></pre></td></tr></table></figure>
<ul>
<li>Example<blockquote>
<p>将shape为[32]的bias增加到shape为[4， 32， 14， 14]的FeatureMap的channel中</p>
</blockquote>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b = torch.rand(32)</span><br><span class="line">f = torch.rand(4, 32, 14, 14)</span><br><span class="line"></span><br><span class="line">b = b.unsqueeze(1).unsqueeze(2).unsqueeze(0)</span><br><span class="line">#注意第二次的unsqueeze参数是按第一次操作过后的索引</span><br><span class="line"></span><br><span class="line">b.shape     #torch.Size([1, 32, 1, 1])</span><br></pre></td></tr></table></figure>

<h4 id="Squeeze"><a href="#Squeeze" class="headerlink" title="Squeeze"></a>Squeeze</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b.shape             #torch.Size([1, 32, 1, 1])</span><br><span class="line">b.squeeze().shape   #torch.Size([32]) 不传递参数时将能挤压的全部挤压</span><br><span class="line">b.squeeze(0).shape  #torch.Size([32, 1, 1])</span><br><span class="line"></span><br><span class="line">b.squeeze(1).shape  #torch.Size([1, 32, 1, 1]) 维度不是1，所以不能挤压，但不会报错</span><br></pre></td></tr></table></figure>

<h3 id="Expand-Repeat"><a href="#Expand-Repeat" class="headerlink" title="Expand / Repeat"></a>Expand / Repeat</h3><p>维度扩展<br>之前的<code>b: [1, 32, 1, 1]``f: [4, 32, 14, 14]</code>仍不能相加，需要分别将第0、2、3维度扩展4、14、14倍</p>
<ul>
<li>Expand：broadcasting. 只改变理解方式，不改变数据</li>
<li>Repeat：memory copied. 增加数据，都拷贝一遍.</li>
</ul>
<blockquote>
<p>推荐Expand，省略复制数据，只在操作必要时复制. 运行速度快且节约内存.</p>
</blockquote>
<h4 id="Expand"><a href="#Expand" class="headerlink" title="Expand"></a>Expand</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 32, 14, 14)</span><br><span class="line">b.shape         #torch.Size(1, 32, 1, 1)</span><br><span class="line">b.expand(4, 32, 14, 14).shape       #torch.Size(4, 32, 14, 14)</span><br><span class="line">#前提：前后dim一致（这里都为4），1扩展到N，M扩展到M</span><br><span class="line"></span><br><span class="line">b.expand(-1, 32, -1, -1).shape       #torch.Size(1, 32, 1, 1) -1保持不变</span><br><span class="line"></span><br><span class="line">b.expand(-1, 32, -1, -4).shape       #torch.Size(1, 32, 1, -4)  是个bug，无意义</span><br></pre></td></tr></table></figure>

<h4 id="Repeat"><a href="#Repeat" class="headerlink" title="Repeat"></a>Repeat</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b.shape         #torch.Size(1, 32, 1, 1)</span><br><span class="line">b.repeat(4, 32, 1, 1).shape     #torch.Size(4, 1024, 1, 1) repeat的参数是对应维度复制的次数</span><br><span class="line"></span><br><span class="line">b.repeat(4, 1, 14, 14).shape     #torch.Size(4, 32, 14, 14)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>会使得你无法使用原来的数据，占用内存变多会重新申请一片空间</p>
</blockquote>
<h3 id="T-矩阵转置"><a href="#T-矩阵转置" class="headerlink" title="T 矩阵转置"></a>T 矩阵转置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.randn(3, 4)</span><br><span class="line">a.t().shape     #torch.Size([4, 3])</span><br><span class="line">#仅支持2D，1D、3D...都不支持</span><br></pre></td></tr></table></figure>

<h3 id="Transpose-交换维度"><a href="#Transpose-交换维度" class="headerlink" title="Transpose 交换维度"></a>Transpose 交换维度</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.shape = [4, 3, 32, 32]</span><br><span class="line">a1 = a.transpose(1, 3).view(4, 3*32*32).view(4, 3, 32, 32)</span><br><span class="line">-------------ERROR------------</span><br><span class="line">#transpose操作之后会使得元素不连续，所以在view之前要加上contiguous操作</span><br><span class="line"></span><br><span class="line">a1 = a.transpose(1, 3).contiguous().view(4, 3*32*32).view(4, 3, 32, 32) #污染数据</span><br><span class="line">a1.shape        #torch.Size([4, 3, 32, 32])</span><br><span class="line"></span><br><span class="line">a2 = a.transpose(1, 3).contiguous().view(4, 3*32*32).view(4, 32, 32, 3).transpose(1, 3) #与a等价，注意第二个view与a1不同</span><br><span class="line">a2.shape                        #torch.Size([4, 3, 32, 32])</span><br><span class="line"></span><br><span class="line">#验证，用eq函数比较各个数据是否一致，返回[4, 3, 32, 32]的张量，all函数判断其所有元素是否都为True</span><br><span class="line">torch.all(torch.eq(a, a1))      #tensor(False)</span><br><span class="line"></span><br><span class="line">torch.all(torch.eq(a, a2))      #tensor(True)</span><br></pre></td></tr></table></figure>

<h3 id="Permute"><a href="#Permute" class="headerlink" title="Permute"></a>Permute</h3><p>transpose只能两两交换</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b = torch.rand(4, 3, 28, 32)</span><br><span class="line">b.tanspose(1, 3).transpose(1, 2).shape</span><br><span class="line">#torch.Size([4, 28, 32, 3])</span><br><span class="line"></span><br><span class="line">b.permute(0, 2, 3, 1).shape</span><br><span class="line">#torch.Size([4, 28, 32, 3])</span><br><span class="line">#permute的参数为排列后的索引</span><br></pre></td></tr></table></figure>
<blockquote>
<p>permute函数也会打乱内存顺序，需要时也要用到contifuous函数，也就是重新生成一片内存再复制过来.</p>
</blockquote>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记06----拼接与拆分</title>
    <url>/Learning/Notes/PyTorch/PyTorch06/</url>
    <content><![CDATA[<p>Tensor的拼接与拆分操作</p>
<span id="more"></span>

<ul>
<li>Cat</li>
<li>Stack</li>
<li>Split</li>
<li>Chunk</li>
</ul>
<h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p>Statisics about scores</p>
<ul>
<li>[class1-4, students, scores]</li>
<li>[class5-9, students, scores]</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 32, 8)</span><br><span class="line">b = torch.rand(5, 32, 8)</span><br><span class="line"></span><br><span class="line">torch.cat([a, b], dim = 0).shape</span><br><span class="line">#torch.Size([9, 32, 8])</span><br><span class="line">#第一个参数是一个list，包含了所有需要拼接的Tensor</span><br><span class="line">#第二个参数dim决定了合并的维度</span><br><span class="line">#其他维度要一样</span><br><span class="line">c = torch.rand(3, 32, 1)</span><br><span class="line">torch.cat([a, c], dim = 0).shape</span><br><span class="line">--------ERROR--------</span><br></pre></td></tr></table></figure>

<h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>create new dim</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(32, 8)</span><br><span class="line">b = torch.rand(32, 8)</span><br><span class="line"></span><br><span class="line">torch.stack([a, b], dim = 0).shape</span><br><span class="line">#torch.Size([2, 32, 8])</span><br><span class="line">torch.stack([a, b], dim = 1).shape</span><br><span class="line">#torch.Size([32, 2, 8])</span><br></pre></td></tr></table></figure>
<p>例如一个老师统计了一个班的成绩: [students, scores]，另一个老师也是，那么使用stack得到[2, students, scores]，而不是把students那一维度拼接起来</p>
<p><strong>stack必须维度一致</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(30, 8)</span><br><span class="line">b = torch.rand(32, 8)</span><br><span class="line">torch.stack([a, b], dim = 0)</span><br><span class="line">--------ERROR--------</span><br></pre></td></tr></table></figure>

<h3 id="split-by-len"><a href="#split-by-len" class="headerlink" title="split: by len"></a>split: by len</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b = torch.rand(32, 8)</span><br><span class="line">a.shape     #torch.Size([32, 8])</span><br><span class="line">c = torch.stack([a, b], dim = 0)</span><br><span class="line">c.shape     #torch.Size([2, 32, 8])</span><br><span class="line"></span><br><span class="line">aa, bb = c.split(1, dim = 0)    #第一个参数是长度</span><br><span class="line">aa.shape, bb.shape</span><br><span class="line">#torch.Size([1, 32, 8]), torch.Size([1, 32, 8])</span><br><span class="line"></span><br><span class="line">aa, bb = c.split([1, 1], dim = 0)   #第一个参数是长度的list</span><br><span class="line">#结果同上</span><br><span class="line"></span><br><span class="line">aa, bb = c.split(2, dim = 0)</span><br><span class="line">-------ERROR--------</span><br></pre></td></tr></table></figure>

<h3 id="chunk-by-num"><a href="#chunk-by-num" class="headerlink" title="chunk: by num"></a>chunk: by num</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b = torch.rand(32, 8)</span><br><span class="line">a.shape     #torch.Size([32, 8])</span><br><span class="line">c = torch.stack([a, b], dim = 0)</span><br><span class="line">c.shape     #torch.Size([2, 32, 8])</span><br><span class="line"></span><br><span class="line">aa, bb = c.chunk(2, dim = 0)    #平均分成2块</span><br><span class="line">aa.shape, bb.shape</span><br><span class="line">#torch.Size([1, 32, 8]), torch.Size([1, 32, 8])</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记07----基本运算</title>
    <url>/Learning/Notes/PyTorch/PyTorch07/</url>
    <content><![CDATA[<p>PyTorch的一些基本运算</p>
<span id="more"></span>

<ul>
<li>add / minus / multiply / divide</li>
<li>matmul</li>
<li>pow</li>
<li>sqrt / rsqrt</li>
<li>round</li>
</ul>
<h3 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(3, 4)</span><br><span class="line">b = torch.rand(4)</span><br><span class="line"></span><br><span class="line">torch.all(torch.eq(a + b, torch.add(a, b))) #tensor(True)</span><br><span class="line"></span><br><span class="line">torch.all(torch.eq(a - b, torch.sub(a, b))) #tensor(True)</span><br><span class="line"></span><br><span class="line">torch.all(torch.eq(a * b, torch.mul(a, b))) #tensor(True)</span><br><span class="line"></span><br><span class="line">torch.all(torch.eq(a / b, torch.div(a, b))) #tensor(True)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>//</code>是整除</p>
</blockquote>
<h3 id="matmul-矩阵乘法"><a href="#matmul-矩阵乘法" class="headerlink" title="matmul 矩阵乘法"></a>matmul 矩阵乘法</h3><ul>
<li><code>torch.mm</code> only for 2d，因此不推荐</li>
<li><code>torch.matmul</code> 或 <code>@</code></li>
</ul>
<blockquote>
<p><code>*</code>是相同位置元素相乘，<code>.matmul</code>是矩阵乘法</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a                   #tensor([[3., 3.],</span><br><span class="line">                             [3., 3.]])</span><br><span class="line">b = torch.ones(2, 2)</span><br><span class="line"></span><br><span class="line">torch.mm(a, b)      #tensor([[6., 6.],</span><br><span class="line">                             [6., 6.]])</span><br><span class="line">                             </span><br><span class="line">torch.matmul(a, b)</span><br><span class="line">a @ b</span><br><span class="line">#结果相同     </span><br></pre></td></tr></table></figure>

<h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><p>神经网络线性层的相加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 784)</span><br><span class="line">x = torch.rand(4, 784)</span><br><span class="line"></span><br><span class="line">w = torch.rand(512, 784)    #降维，把784降到512</span><br><span class="line"># 默认是[channel-out, channel-in]</span><br><span class="line"></span><br><span class="line">(x @ w.t()).shape           #tensor.Size([4, 512])</span><br><span class="line">#如果w是高维的，使用transpose交换</span><br></pre></td></tr></table></figure>

<h4 id="tensor-matmul"><a href="#tensor-matmul" class="headerlink" title="tensor matmul"></a>tensor matmul</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 3, 28, 64)</span><br><span class="line">b = torch.rand(4, 3, 64, 32)</span><br><span class="line"></span><br><span class="line">torch.mm(a, b).shape</span><br><span class="line">--------ERROR--------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">torch.matmul(a, b).shape        #tensor.Size([4, 3, 28, 32]) 只用最后两维运算，前面的不变</span><br><span class="line"></span><br><span class="line">b = torch.rand(4, 1, 64, 32)</span><br><span class="line">torch.matmul(a, b).shape        #tensor.Size([4, 3, 28, 32]) 使用了broadcast机制</span><br><span class="line"></span><br><span class="line">b = torch.rand(2, 64, 32)</span><br><span class="line">torch.matmul(a, b).shape</span><br><span class="line">--------ERROR--------</span><br></pre></td></tr></table></figure>

<h3 id="power-sqrt-rsqrt"><a href="#power-sqrt-rsqrt" class="headerlink" title="power / sqrt / rsqrt"></a>power / sqrt / rsqrt</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.full([2, 2], 3)</span><br><span class="line">a.power(2)      #tensor([[9., 9.],</span><br><span class="line">                         [9., 9.]])</span><br><span class="line">a ** 2          #结果相同</span><br><span class="line"></span><br><span class="line">aa = a ** 2</span><br><span class="line">aa.sqrt()       #tensor([[3., 3.],</span><br><span class="line">                         [3., 3.]])</span><br><span class="line">aa.rsqrt()      #tensor([[0.3333, 0.3333],</span><br><span class="line">                         [0.3333, 0.3333]])</span><br><span class="line">#是sqrt的倒数</span><br><span class="line"></span><br><span class="line">a ** 0.5        #同sqrt()</span><br><span class="line">```                         </span><br><span class="line"></span><br><span class="line">### exp / log</span><br></pre></td></tr></table></figure>
<p>a = torch.exp(torch.ones(2, 2))<br>a               #tensor([[2.7183, 2.7183],<br>                         [2.7183, 2.7183]])</p>
<p>torch.log(a)    #tensor([[1., 1.],<br>                         [1., 1.]])<br>#默认以e为底，还可使用log2()、log10()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### approximation 近似值</span><br><span class="line">- `.floor()` / `.ceil()` 向下取整与向上取整</span><br><span class="line">- `.round()` 四舍五入</span><br><span class="line">- `.trunc()` / `.frac()` 整数部分与小数部分</span><br><span class="line"></span><br><span class="line">### clamp 裁剪</span><br><span class="line">- gradient clipping 梯度裁剪（梯度弥散、梯度爆炸）</span><br><span class="line">&gt; 时不时要打印梯度的模`w.grad.norm(2)`</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>grad = torch.rand(2, 3) * 15<br>grad    #tensor([[14.8737, 10.1571,  4.4872],<br>                 [11.3591,  8.9101, 14.0524]])</p>
<p>grad.max()                  #tensor(14.8737)<br>grad.median()               #tensor(10.1571) 中间值</p>
<p>grad.clamp(10)              #将grad中的小于10的部分变为10<br>#tensor([[14.8737, 10.1571, 10.0000],<br>         [11.3591, 10.0000, 14.0524]])</p>
<p>grad.clamp(0, 10)           #将grad中的数据设置为0～10直接，超出算10，小于算0<br>#tensor([[10.0000, 10.0000,  4.4872],<br>         [10.0000,  8.9101, 10.0000]])</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">梯度裁剪：</span><br></pre></td></tr></table></figure>
<p>for w in [] #wlist<br>    clamp(w.grad, 10)</p>
<pre><code>
</code></pre>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记05----Broadcast自动扩展</title>
    <url>/Learning/Notes/PyTorch/PyTorch05/</url>
    <content><![CDATA[<p>PyTorch的自动扩展</p>
<span id="more"></span>

<ul>
<li>Expand，可以维度扩展</li>
<li>without copying data，扩展时不用拷贝数据，能节省空间</li>
</ul>
<h3 id="Key-idea"><a href="#Key-idea" class="headerlink" title="Key idea"></a>Key idea</h3><ul>
<li>Insert 1 dim ahead</li>
<li>Expand dims with size 1 to same size</li>
</ul>
<p>Feature maps: [4, 32, 14, 14]<br>Bias: [32] –&gt; [32, 1, 1] –&gt; [1, 32, 1, 1] –&gt; [4, 32, 14, 14]</p>
<p>Broadcast示意图：<br><img src="/images/body/PyTorch/PyTorch05.png" alt="Figure1"></p>
<h3 id="Why-broadcasting"><a href="#Why-broadcasting" class="headerlink" title="Why broadcasting"></a>Why broadcasting</h3><ol>
<li><p>for actual demanding</p>
<ul>
<li>[class, student, scores]</li>
<li>Add bias for every students: +5 score</li>
<li>[4, 32, 8] + [5.0] (标量)</li>
<li><code>bias.unsqueeze(0).unsqueeze(0).expand_as(A)</code></li>
</ul>
</li>
<li><p>memory consumption<br>节省内存消耗</p>
</li>
</ol>
<h3 id="Is-it-broadcasting-able"><a href="#Is-it-broadcasting-able" class="headerlink" title="Is it broadcasting-able?"></a>Is it broadcasting-able?</h3><h4 id="Match-from-Last-dim-从最后一维匹配（一般最后一维是物理意义上的小维度）"><a href="#Match-from-Last-dim-从最后一维匹配（一般最后一维是物理意义上的小维度）" class="headerlink" title="Match from Last dim 从最后一维匹配（一般最后一维是物理意义上的小维度）"></a>Match from <strong>Last</strong> dim 从最后一维匹配（一般最后一维是物理意义上的小维度）</h4><ul>
<li>If current dim = 1, expand to same</li>
<li>If either has no dim, insert one dim and expand to same</li>
<li>otherwise, NOT broadcasting-able</li>
</ul>
<blockquote>
<p>例如[8, 32, 8]（8个班，每班32个学生，每个学生修八门课即八个成绩）bias = [5]是 [1]的shape，对八门课都要加，对每个班每个学生都适用 –&gt; [1, 1, 1] —&gt; [32, 32, 8]</p>
</blockquote>
<blockquote>
<p>如果仅对某一门课的成绩添加bias，那么bias = [0, 0, 5, …, 0]是 [8]的shape，每个班每个学生都适用 –&gt; [1, 1, 8] –&gt; [32, 32, 8]</p>
</blockquote>
<blockquote>
<p>A: [4, 32, 8], bias: [4]  NOT broadcasting-able</p>
</blockquote>
<h3 id="Situation"><a href="#Situation" class="headerlink" title="Situation"></a>Situation</h3><h4 id="Situation-1"><a href="#Situation-1" class="headerlink" title="Situation 1"></a>Situation 1</h4><p>A: [4, 32, 14, 14]<br>B: [1, 32, 1, 1] –&gt; [4, 32, 14, 14]</p>
<h4 id="Situation-2"><a href="#Situation-2" class="headerlink" title="Situation 2"></a>Situation 2</h4><p>A: [4, 32, 14, 14]<br>B: [14, 14] –&gt; [1, 1, 14, 14] –&gt; [4, 32, 14, 14]</p>
<h4 id="Situation-3"><a href="#Situation-3" class="headerlink" title="Situation 3"></a>Situation 3</h4><p>A: [4, 32, 14, 14]<br>B: [2, 32, 14, 14]<br>NOT broadcasting-able</p>
<h3 id="How-to-understand-this-behavior"><a href="#How-to-understand-this-behavior" class="headerlink" title="How to understand this behavior?"></a>How to understand this behavior?</h3><h4 id="When-it-has-no-dim"><a href="#When-it-has-no-dim" class="headerlink" title="When it has no dim"></a>When it has no dim</h4><ul>
<li>treat it as all own the same</li>
<li>[class, student, scores] + [scores]</li>
</ul>
<h4 id="When-it-has-dim-of-size-1"><a href="#When-it-has-dim-of-size-1" class="headerlink" title="When it has dim of size 1"></a>When it has dim of size 1</h4><ul>
<li>treat it shared by all</li>
<li>[class, student, scores] + [student, 1]（a学生所有课程 + 0，b学生所有课程 + 1 …这种情况）</li>
</ul>
<p><em><strong>match from LAST dim</strong></em></p>
<p>+ [1, 1, 1, 1] 等价 + [1]</p>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记08----统计属性</title>
    <url>/Learning/Notes/PyTorch/PyTorch08/</url>
    <content><![CDATA[<p>记录了PyTorch一些常见统计属性.</p>
<span id="more"></span>

<p>常见统计属性：</p>
<ul>
<li>norm 范数</li>
<li>mean sum</li>
<li>prod 累乘</li>
<li>min max argmin argmax 最小/大值的位置</li>
<li>kthvalue topk </li>
</ul>
<h3 id="norm"><a href="#norm" class="headerlink" title="norm"></a>norm</h3><p><em>不是normalize正则化</em><br><em>矩阵范数与向量范数有区别的</em></p>
<p>norm-p p范数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.full([8], 1)</span><br><span class="line">b = a.review(2, 4)</span><br><span class="line">c = a.review(2, 2, 2)</span><br><span class="line"></span><br><span class="line">a.norm(1), b.norm(1), c.norm(1)</span><br><span class="line">#tensor(8.), tensor(8.), tensor(8.)</span><br><span class="line"></span><br><span class="line">a.norm(2), b.norm(2), c.norm(2)</span><br><span class="line">#tensor(2.8284), tensor(2.8284), tensor(2.8284)</span><br><span class="line"></span><br><span class="line">b.norm(1, dim = 0)</span><br><span class="line">#tensor([4., 4.])</span><br><span class="line"></span><br><span class="line">c.norm(1, dim = 0)</span><br><span class="line">#tensor([[2, 2],</span><br><span class="line">         [2, 2]])</span><br></pre></td></tr></table></figure>

<h3 id="mean-sum-min-max-prod-argmax-argmin"><a href="#mean-sum-min-max-prod-argmax-argmin" class="headerlink" title="mean / sum / min / max / prod / argmax / argmin"></a>mean / sum / min / max / prod / argmax / argmin</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.arange(8).view(2, 4).float()</span><br><span class="line">#tensor([[0, 1, 2, 3],</span><br><span class="line">         [4, 5, 6, 7]])</span><br><span class="line">         </span><br><span class="line">a.min(), a.max(), a.mean(), a.prod(), a.sum()</span><br><span class="line">#tensor(0.), tensor(7.), tensor(3.5000), tensor(0.), tensor(28.)</span><br><span class="line"></span><br><span class="line">a.max(dim = 1)</span><br><span class="line">#tensor([3., 7.]), tensor([3, 3])</span><br><span class="line"></span><br><span class="line">a.argmax(), a.argmin()</span><br><span class="line">#tensor(7), tensor(0) 会将tesor打平后求max、min索引</span><br><span class="line"></span><br><span class="line">a.argmax(dim = 1)</span><br><span class="line">#tensor([3, 3])</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="dim-keepdim"><a href="#dim-keepdim" class="headerlink" title="dim / keepdim"></a>dim / keepdim</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(4, 10)</span><br><span class="line">a.max(dim = 1)</span><br><span class="line">#tensor([0.8362, 1.7015, 1.1297, 0.6386]), tensor([3, 8, 6, 4])</span><br><span class="line"></span><br><span class="line">a.max(dim = 1, keepdim = True)  #dim与原tensor保持一致</span><br><span class="line">#tensor([[0.8362],</span><br><span class="line">         [1.7015],</span><br><span class="line">         [1.1297],</span><br><span class="line">         [0.6386]]), tensor([[3],</span><br><span class="line">                             [8],</span><br><span class="line">                             [6],</span><br><span class="line">                             [4]])</span><br><span class="line">                             </span><br><span class="line">a.argmax(dim = 1, keepdim = True)</span><br><span class="line">#tensor([[3],</span><br><span class="line">         [8],</span><br><span class="line">         [6],</span><br><span class="line">         [4]])</span><br></pre></td></tr></table></figure>

<h3 id="top-k-k-th"><a href="#top-k-k-th" class="headerlink" title="top-k / k-th"></a>top-k / k-th</h3><ul>
<li>top-k 返回最大的k个数和其索引</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.randn(4, 10)</span><br><span class="line">a.topk(3, dim = 1)</span><br><span class="line">#tensor([[0.8362, 0.3913, -0.1830],</span><br><span class="line">         [1.7832, 1.4828,  1.2393],</span><br><span class="line">         [0.6392, 0.3824,  0.2227],</span><br><span class="line">         [0.9928, 0.1215, -0.3927]]), tensor([[3, 8, 9],</span><br><span class="line">         [8, 6, 5],</span><br><span class="line">         [2, 3, 6],</span><br><span class="line">         [5, 7, 9]])</span><br><span class="line"> </span><br><span class="line">a.topk(3, dim = 1, largest = false)    #返回最小的k个</span><br></pre></td></tr></table></figure>

<ul>
<li>kthvalue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.kthvalue(8, dim = 1)</span><br><span class="line">#tensor([-0.1830, 1.2393, 0.2227, -0.3927]), tensor([9, 5, 6, 9])</span><br><span class="line">#返回第8小的元素及其索引（在这里是第3大）</span><br><span class="line">a.kthvalue(8)       #结果同上</span><br></pre></td></tr></table></figure>

<h3 id="compare"><a href="#compare" class="headerlink" title="compare"></a>compare</h3><blockquote>
<p>&gt;, &gt;=, &lt;, &lt;=, !=, == </p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a &gt; 0</span><br><span class="line">#tensor([[0, 0, 0, 1, ...],</span><br><span class="line">         [0, 0, 0, 0, ...],</span><br><span class="line">         [0, 1, 1, 0, ...],</span><br><span class="line">         [0, 0, 0, 0, ...]])</span><br><span class="line">torch.gt(a, 0)  #结果同上</span><br><span class="line"></span><br><span class="line">b = rand(2, 2)</span><br><span class="line">torch.eq(b, b)</span><br><span class="line">#tensor([[1, 1],</span><br><span class="line">         [1, 1]])</span><br><span class="line">torch.equal(b, b)</span><br><span class="line">#True</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记10----激活函数与常见Loss</title>
    <url>/Learning/Notes/PyTorch/PyTorch10/</url>
    <content><![CDATA[<p>梯度下降，激活函数，与常见Loss</p>
<span id="more"></span>

<h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>新值 = 当前值 - 学习率 * 梯度</p>
<ul>
<li>可能会收敛到局部极小值</li>
<li>学习率不能太大</li>
<li>逃离局部最小值：添加一个动量（惯性）</li>
<li>使用sigmoid函数当x很大的时候导数趋向于0，数据会得不到更新，这种现象叫做梯度弥散</li>
</ul>
<h3 id="一些激活函数"><a href="#一些激活函数" class="headerlink" title="一些激活函数"></a>一些激活函数</h3><h4 id="Sigmoid"><a href="#Sigmoid" class="headerlink" title="Sigmoid"></a>Sigmoid</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">z = torch.linspace(-100, 100, 10)</span><br><span class="line">z   #tensor([-100.0000, -77.7778, -55.5556, -33.3333, -11.1111, 11.1111, 33.3333, 55.5556, 77.7778, 100.0000])</span><br><span class="line">torch.sigmoid(z)</span><br><span class="line">#tensor([0.0000e+00, 1.6655e-34, 7.4564e-25, 3.3382e-15, 1.4945e-05, 9.9999e-01, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00])</span><br></pre></td></tr></table></figure>

<h4 id="tanh"><a href="#tanh" class="headerlink" title="tanh"></a>tanh</h4><p><code>tanh(x) = 2sigmoid(2x) - 1</code><br>类似sigmoid，值域(-1, 1)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.linspace(-1, 1, 10)</span><br><span class="line">torch.tanh(a)</span><br></pre></td></tr></table></figure>

<h4 id="ReLU-Rectified-Linear-Unit"><a href="#ReLU-Rectified-Linear-Unit" class="headerlink" title="ReLU (Rectified Linear Unit)"></a>ReLU (Rectified Linear Unit)</h4><ul>
<li>使用很多，奠基石</li>
<li>减少了梯度弥散和梯度爆炸的出现</li>
<li>使用<code>torch.relu(a)</code>或<code>F.relu(a)</code>（<code>import torch.nn.functional as F</code>）</li>
</ul>
<h4 id="Softmax（soft-version-of-max）"><a href="#Softmax（soft-version-of-max）" class="headerlink" title="Softmax（soft version of max）"></a>Softmax（soft version of max）</h4><p>输入y: [y1, y2, …, yn] ，输出p: [p1, p2, …, pn]且sum(p) = 1<br><code>S(yi) = exp(yi) / sum(exp(y))</code><br>如y:[2.0, 1.0, 0.1] —&gt; p: [0.7, 0.2, 0.1]<br>会让大的更大，小的压缩在一个更密集的空间<br>梯度<code>dpi_daj</code>：</p>
<ul>
<li>i = j: <code>dpi_dai = pi * (1 - pi)</code> &gt; 0</li>
<li>i != j:<code>dpi_daj = - pj * pi</code> &lt; 0</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = torch.rand(3)</span><br><span class="line">a.requires_grad_()</span><br><span class="line"></span><br><span class="line">p = F.softmax(a, dim = 0)</span><br><span class="line">#每次求导会将梯度信息清除</span><br><span class="line">#应该在第一次函数内加入retain_graph = True参数</span><br><span class="line"></span><br><span class="line">p = F.softmax(a, dim = 0)</span><br><span class="line">torch.autograd.grad(p[1], [a], retain_graph = True)</span><br><span class="line">#tensor([-0.0828, 0.2274, -0.1447]) 索引1为正</span><br><span class="line">torch.autograd.grad(p[2], [a])</span><br><span class="line">#tensor([-0.0979, -0.1447, 0.2425]) 索引2为正</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.backward()</span><br><span class="line">--------ERROR--------</span><br><span class="line">#p是向量，这样.backward()会报错</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Loss及其梯度"><a href="#Loss及其梯度" class="headerlink" title="Loss及其梯度"></a>Loss及其梯度</h3><h4 id="均方差MSE（Mean-Squared-Error）"><a href="#均方差MSE（Mean-Squared-Error）" class="headerlink" title="均方差MSE（Mean Squared Error）"></a>均方差MSE（Mean Squared Error）</h4><p><code>loss = sum((y - y_pred) ** 2)</code><br>不是L2-norm<br><code>L2-norm = sqrt(sum((y - y+pred) ** 2))</code><br>可以使用norm()函数<br><code>loss = norm.norm(y - y_pred, 2).pow(2)</code><br>梯度：<code>dloss_dx = 2 * sum(y - y_pred) * dy_pred_dx</code></p>
<p>使用PyTorch求导</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x = torch.ones(1)</span><br><span class="line">w = torch.full([1], 2)</span><br><span class="line">mse = F.mse_loss(x * w, torch.ones(1))  #第一个参数为predict值，第二个参数为label</span><br><span class="line">#tensor(1.)</span><br><span class="line"></span><br><span class="line">torch.autograd.grad(mse, [w])</span><br><span class="line">#第一个参数y，第二个参数[x1, x2, ...]</span><br><span class="line">#tensor定义时默认不需要求导信息，所以w无法求导 </span><br><span class="line">--------ERROR--------</span><br><span class="line"></span><br><span class="line">#对w进行更新或者在定义w时加入参数requires_grad = True</span><br><span class="line">w.requires_grad_()</span><br><span class="line">    #tensor([2.], requires_grad = True)</span><br><span class="line">    #这时求梯度仍然会报错，因为PyTorch是动态图（做一步计算一步图），要先更新一下mse</span><br><span class="line">mse = F.mse_loss(x * w, torch.ones(1))</span><br><span class="line"></span><br><span class="line">torch.autograd.grad(mse, [w])   #tensor([2.])                                                                                                                 </span><br><span class="line"></span><br><span class="line">mse.backward()</span><br><span class="line">mse.grad            #tensor([2.])</span><br></pre></td></tr></table></figure>

<h3 id="Cross-Entropy-Loss"><a href="#Cross-Entropy-Loss" class="headerlink" title="Cross Entropy Loss"></a>Cross Entropy Loss</h3><p>之后介绍</p>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch笔记09----高阶OP</title>
    <url>/Learning/Notes/PyTorch/PyTorch09/</url>
    <content><![CDATA[<p>记录了PyTorch中两个高阶操作：<code>Where</code>与<code>Gather</code></p>
<span id="more"></span>

<h2 id="Where"><a href="#Where" class="headerlink" title="Where"></a>Where</h2><p><code>torch.where(condition, x, y)</code>  </p>
<p>满足condition的 返回x，否则返回y</p>
<p>x、y、condition的shape相同</p>
<p>condition矩阵: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensor([[1, 0],</span><br><span class="line">        [0, 1]])</span><br></pre></td></tr></table></figure>
<p>那么A的地方取x对应元素，B的地方取y对应元素</p>
<h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cond        #tensor([[0.6769, 0.7271],</span><br><span class="line">                     [0.8884, 0.4163]])</span><br><span class="line">a           #tensor([[0., 0.],</span><br><span class="line">                     [0., 0.]])  </span><br><span class="line">b           #tensor([[1., 1.],</span><br><span class="line">                     [1., 1.]])</span><br><span class="line">                     </span><br><span class="line">torch.where(cond &gt; 0.5, a, b)</span><br><span class="line">#tensor([[0., 0.],</span><br><span class="line">         [0., 1.]])</span><br></pre></td></tr></table></figure>

<h2 id="Gather"><a href="#Gather" class="headerlink" title="Gather"></a>Gather</h2><p><code>torch.gather(input, dim, index, out = None)</code></p>
<blockquote>
<p>index是表，dim是查表的维度，index是需要查的index</p>
</blockquote>
<p>查表操作，如：表[x1, x2, x3]，那么我们gather需要查的index：[0, 1, 0, 2]得到[x1, x2, x1, x3]</p>
<p>四条数据输入神经网络得到一个输出：[4, 10]<br>取出每条数据概率最大的index:[[1], [2], [0], [9]]<br>使用gather查表得到对应的元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prob = torch.rand(4, 10)</span><br><span class="line">idx = prob.topk(dim = 1, k = 3)[1]</span><br><span class="line">idx</span><br><span class="line">#tensor([[7, 4, 9],</span><br><span class="line">         [8, 1, 3],</span><br><span class="line">         [2, 8, 4],</span><br><span class="line">         [8, 6, 0]])</span><br><span class="line">label = torch.arange(10) + 100</span><br><span class="line">label</span><br><span class="line">#tensor([100, 101, ..., 109])</span><br><span class="line"></span><br><span class="line">torch.gather(label.expand(4, 10), dim = 1, index = idx.long())</span><br><span class="line">#tensor([[107, 104, 109],</span><br><span class="line">         [108, 101, 103],</span><br><span class="line">         [102, 108, 104],</span><br><span class="line">         [108, 106, 100]])</span><br><span class="line">#.long()转化为LongTensor类型，不加也可以得到相同结果</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>如何备份你的存档</title>
    <url>/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles/</url>
    <content><![CDATA[<p>这篇文章是宝可梦正版正作卡带从 <em>Gen1</em> 到 <em>Gen7</em> 的存档提取与导入教程.<br>不局限于宝可梦正作，其他卡带也可以通过同样的方法提取.<br>如果你对备份存档感到介意，请根据自身情况取舍.</p>
<p>封面 [ID:86927624]. </p>
<span id="more"></span>

<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>已经有人在贴吧写了详细的傻瓜教程，比我写的详细很多：<a href="https://tieba.baidu.com/p/6349601583?share=9105&fr=sharewise&see_lz=0&share_from=post&sfc=copy&client_type=2&client_version=12.15.1.0&st=1640142523&unique=9EBFF40D479B24A05CA7FA461487C5A9&qq-pf-to=pcqq.group&red_tag=0588212229">【教程】全版本正版游戏卡带存档导出导入教程</a><br>这篇注重于收录常规方法而非详细教程（都有写的那么详细的了）.</p>
<p>除了下面提到的方法，更多方法请参考<a href="https://projectpokemon.org/home/forums/topic/15107-nds-how-to-backuprestore-your-retail-cartridge-save-file-for-ds-games/">NDS: How to Backup/Restore your retail cartridge save file for DS games
</a>.</p>
<h2 id="GB-与-GBC-卡带"><a href="#GB-与-GBC-卡带" class="headerlink" title="GB 与 GBC 卡带"></a><em>GB</em> 与 <em>GBC</em> 卡带</h2><p>包含的宝可梦卡带有：</p>
<ul>
<li>宝可梦 红 / 绿 / 蓝 / 黄</li>
<li>宝可梦 金 / 银 / 水晶</li>
</ul>
<p>这类应该只能通过特殊设备提取与导入，如 <em>Flash Boy</em> 、 <em>GB Operator</em> 等.</p>
<h5 id="Flash-Boy"><a href="#Flash-Boy" class="headerlink" title="Flash Boy"></a><em>Flash Boy</em></h5><p><img src="/images/body/How-To-Back-Up-Your-Savefiles/Flash-Boy1.png" alt="Flash Boy"><br><img src="/images/body/How-To-Back-Up-Your-Savefiles/Flash-Boy2.png" alt="Flash Boy"><br>在各电商应该都有购买方式.</p>
<h5 id="GB-Operator"><a href="#GB-Operator" class="headerlink" title="GB Operator"></a><em>GB Operator</em></h5><p><a href="https://www.epilogue.co/product/gb-operator">官网地址</a></p>
<p><img src="/images/body/How-To-Back-Up-Your-Savefiles/GB-Operator.gif" alt="GB Operator"></p>
<blockquote>
<p>注意，这类卡带的存档依赖电池，如果电池没电了会导致存档丢失.</p>
</blockquote>
<h2 id="GBA-卡带"><a href="#GBA-卡带" class="headerlink" title="GBA 卡带"></a><em>GBA</em> 卡带</h2><p>包含的宝可梦卡带有：</p>
<ul>
<li>宝可梦 红宝石 / 蓝宝石 / 绿宝石</li>
<li>宝可梦 火红 / 叶绿</li>
</ul>
<p>这类存档提取与导入可以通过：</p>
<ol>
<li>使用特殊设备提取，如上述 <em>Flash Boy</em> 、 <em>GB Operator</em>.</li>
<li>使用 <em>初版 NDS</em> 或 <em>NDS lite</em> 配合 NDS 烧录卡与存档提取软件 <em><strong>GBA Backup Tool</strong></em>.</li>
</ol>
<ul>
<li><a href="https://www.gamebrew.org/wiki/GBA_Backup_Tool">使用方法</a></li>
<li><a href="https://tieba.baidu.com/p/4191400745">使用方法 - 中文</a></li>
<li><a href="/download/GBA-Backup-Tool.nds">下载</a></li>
<li><a href="/Game/DSTWO/">DSTWO相关资源整理</a></li>
</ul>
<p><img src="/images/body/How-To-Back-Up-Your-Savefiles/GBA-Backup-Tool.png" alt="GBA Backup Tool"></p>
<h2 id="NDS-与-3DS-卡带-以及-3DS-VC-系列"><a href="#NDS-与-3DS-卡带-以及-3DS-VC-系列" class="headerlink" title="NDS 与 3DS 卡带 以及 3DS VC 系列"></a><em>NDS</em> 与 <em>3DS</em> 卡带 以及 <em>3DS</em> <strong>VC</strong> 系列</h2><p>包含的宝可梦卡带有：</p>
<ul>
<li>宝可梦 珍珠 / 钻石 / 白金</li>
<li>宝可梦 心金 / 魂银</li>
<li>宝可梦 黑 / 白 </li>
<li>宝可梦 黑2 / 白2</li>
<li>宝可梦 X / Y</li>
<li>宝可梦 欧米伽红宝石／阿尔法蓝宝石</li>
<li>宝可梦 日 / 月</li>
<li>宝可梦 究极之日 / 究极之月</li>
<li>宝可梦 VC 系列</li>
</ul>
<p>这类存档提取与导入需要使用破解 <em>3DS</em> ，想要破解 <em>3DS</em> 请参见：<a href="https://stray-soul.com/">一只火狐的杂物间</a>.<br>请具备一定的破解 3DS 软件安装能力.</p>
<ul>
<li>使用 <em>3DS</em> 存档提取软件 <em><strong>CheckPoint</strong></em> （推荐）或者 <em><strong>TWLSaveTool</strong></em> .<ul>
<li><a href="https://projectpokemon.org/home/tutorials/save-editing/managing-3ds-saves/using-checkpoint-r25/">CheckPoint使用方法</a></li>
<li><a href="https://projectpokemon.org/home/tutorials/save-editing/managing-nds-saves/using-twl-save-tool-r59/">TWLSaveTool使用方法</a></li>
<li><a href="https://github.com/FlagBrew/Checkpoint/releases">CheckPoint下载</a></li>
<li><a href="https://github.com/TuxSH/TWLSaveTool/releases">TWLSaveTool下载</a></li>
</ul>
</li>
</ul>
<p>Checkpoint界面：<br><img src="/images/body/How-To-Back-Up-Your-Savefiles/CheckPoint.png" alt="CheckPoint"><br>TWLSaveTool界面：<br><img src="/images/body/How-To-Back-Up-Your-Savefiles/TWLSaveTool.png" alt="TWLSaveTool"></p>
<h2 id="已失效的与未经测试的-3DS-卡带存档提取外设"><a href="#已失效的与未经测试的-3DS-卡带存档提取外设" class="headerlink" title="已失效的与未经测试的 3DS 卡带存档提取外设"></a>已失效的与未经测试的 <em>3DS</em> 卡带存档提取外设</h2><h4 id="Cyber-Save-Editor"><a href="#Cyber-Save-Editor" class="headerlink" title="Cyber Save Editor"></a><strong>Cyber Save Editor</strong></h4><p><img src="/images/body/How-To-Back-Up-Your-Savefiles/Cyber-Save-Editor01.png" alt="Cyber Save Editor"></p>
<blockquote>
<p>网站已经停止服务了，应该仅支持日版.</p>
</blockquote>
<p><img src="/images/body/How-To-Back-Up-Your-Savefiles/Cyber-Save-Editor02.jpg" alt="Cyber Save Editor"></p>
<h4 id="Cyber-Save-Editor-2"><a href="#Cyber-Save-Editor-2" class="headerlink" title="Cyber Save Editor 2"></a><strong>Cyber Save Editor 2</strong></h4><p>普通版<br><img src="/images/body/How-To-Back-Up-Your-Savefiles/Cyber-Save-Editor03.png" alt="Cyber Save Editor 2"><br><img src="/images/body/How-To-Back-Up-Your-Savefiles/Cyber-Save-Editor04.png" alt="Cyber Save Editor 2"><br><br></p>
<p>典藏版<br><img src="/images/body/How-To-Back-Up-Your-Savefiles/Cyber-Save-Editor05.webp" alt="Cyber Save Editor 2"></p>
<blockquote>
<p><strong>仅支持日版</strong>，是否停止服务未知，如果你知道，请<a href="/about/">与我联系</a>.</p>
</blockquote>
<ul>
<li><a href="https://www.tldevtech.com/best-3ds-save-editor-cyber-save-editor/">Cyber Save Editor 2使用方法</a></li>
</ul>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>不建议滥用存档导入导出，还请保持对游戏、对宝可梦的热爱进行使用！<br>如果你知道更多的方法，还请<a href="/about/">不吝赐教</a>！</p>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
      </tags>
  </entry>
  <entry>
    <title>如何自制宝可梦Gen4与Gen5的配信器</title>
    <url>/Pokemon/Strategies/In-Game/WCD-Distribution-Patch/</url>
    <content><![CDATA[<p>这是宝可梦自制四五代配信器的教程.<br>如有纰漏，请<a href="/about/">与我联系</a>，万分感谢！</p>
<p>封面 [ID:84354949]. </p>
<span id="more"></span>


<p><strong>注意，本教程仅支持<a href="https://wiki.52poke.com/wiki/%E7%AC%AC%E5%9B%9B%E4%B8%96%E4%BB%A3">宝可梦第四世代</a>正作游戏与<a href="https://wiki.52poke.com/wiki/%E7%AC%AC%E4%BA%94%E4%B8%96%E4%BB%A3">宝可梦第五世代</a>正作游戏.</strong></p>
<p>如果你在找<a href="https://wiki.52poke.com/wiki/%E7%AC%AC%E4%B8%89%E4%B8%96%E4%BB%A3">宝可梦第三世代</a>的船票配信方法，请点击<a href="%5B/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/%5D(https://github.com/mrhappyasthma/NDSEventTool.nds)">这里</a>.</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p><strong>请确保你了解一些计算机基础知识</strong></p>
<h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><ul>
<li>能够游玩第四、五世代宝可梦卡带的<em>NDS</em>、<em>3DS</em>系列机器<strong>两台</strong>（以下简称 <em>DS</em> 系列掌机）.</li>
<li>电脑.</li>
<li><em>NDS</em>烧录卡与读卡器.</li>
</ul>
<h2 id="下载配信所需工具："><a href="#下载配信所需工具：" class="headerlink" title="下载配信所需工具："></a>下载配信所需工具：</h2><ul>
<li><p>四代<a href="https://gbatemp.net/threads/wcdpatcher.129568/">WCDPatcher</a><br>上面帖子里的下载地址失效了，可以点击<a href="https://projectpokemon.org/home/files/file/1808-pok%C3%A9mon-wcd-patcher/">这里</a>下载.</p>
</li>
<li><p><a href="https://projectpokemon.org/home/files/category/2-event-gallery/">你想要的配信的Mystery Gift and Wonder Card files</a></p>
</li>
<li><p>或者点击<a href="/download/WCD-Distribution-Patch.rar">这里</a>下载由b站用户<a href="https://space.bilibili.com/3691432">翾樾non</a>整理的自制配信器所需的所有文件.</p>
<blockquote>
<p>很遗憾我没有找到他这里第五世代的<code>LTDCE.exe</code>文件的发布网站，但找到了另外一个第五世代配信器制作软件<a href="https://github.com/PlasticJustice/PKMG5DC">PKMG5DC</a>，感兴趣的话可以自行研究一下</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>b站用户<a href="https://space.bilibili.com/3691432">翾樾non</a>有发布很详细的<a href="https://www.bilibili.com/video/BV1QW411D78Q?share_source=copy_web">视频教学</a>，请先观看该视频. </p>
</blockquote>
<h1 id="制作配信器"><a href="#制作配信器" class="headerlink" title="制作配信器"></a>制作配信器</h1><p>如果你下载的是压缩包，请先解压. </p>
<blockquote>
<p>接下来的教程将会以下载<a href="https://space.bilibili.com/3691432">翾樾non</a>提供的压缩包为例.<br>下面将以</p>
</blockquote>
<h2 id="第四世代"><a href="#第四世代" class="headerlink" title="第四世代"></a>第四世代</h2><p><img src="/images/body/WCD-Distribution-Patch/Figure1.png" alt="Figure1"></p>
<ul>
<li>打开<em>Gen4</em>文件夹中的<code>WCDPatcher.exe</code>. 点击红色框.</li>
<li>在弹出的<em>Select the Distribution ROM</em>窗口中选择同一目录下的<code>NTR-AARE-USA - GameStop Deoxys.nds</code>文件并点击<em>打开</em>.</li>
<li>点击<code>WCDPatcher.exe</code>上的蓝色框.</li>
<li>在弹出的<em>Select the Wondercard ROM</em>窗口中，打开文件夹<code>Gen4\PPorg_GenIV_WCs\PPorg_GenIV_WCs\</code>并寻找你所需要的配信文件并点击<em>打开</em>.<br>如<code>Gen4\PPorg_GenIV_WCs\PPorg_GenIV_WCs\Darkrai - Movie 2007\</code>文件夹下的<code>007 Movie Darkrai ENG-USA [PPorg].pcd</code>文件.<blockquote>
<p>注意，每个配信对应的文件夹中的文件分游戏语音（地区）版本，请选择你接收的游戏对应的版本</p>
</blockquote>
</li>
<li>点击<code>WCDPatcher.exe</code>上的紫色框，并选择对应地区语言版本.</li>
<li>点击<code>WCDPatcher.exe</code>上的黄色框.</li>
<li>在弹出的<em>Select the New ROM Location</em>窗口中，打开到你想要保存的位置，在文件名处随意命名，点击<em>保存</em>.</li>
<li>得到<code>.nds</code>文件.</li>
</ul>
<h2 id="第五世代"><a href="#第五世代" class="headerlink" title="第五世代"></a>第五世代</h2><p><img src="/images/body/WCD-Distribution-Patch/Figure2.png" alt="Figure2"></p>
<ul>
<li>打开<em>Gen5</em>文件夹中的<code>LTDCE.exe</code>. 点击<strong>Open ROM</strong>.</li>
<li>在弹出的<em>Open Nintendo DS ROM</em>窗口中选择同一目录下的<code>2046 Liberty Pass ENG .nds</code>文件并点击<em>打开</em>.</li>
<li>点击<code>LTDCE.exe</code>上的红色框.</li>
<li>在弹出的<em>Open Pokemon Mystery Gift File</em>窗口中，打开文件夹<code>Gen5\PPorg_GenV_WCs\PPorg_GenV_WCs</code>并根据你的游戏语言版本进入对应文件夹，寻找你所需要的配信文件并点击<em>打开</em>.<br>如<code>Gen5\PPorg_GenV_WCs\PPorg_GenV_WCs\English</code>文件夹下的<code>028 Dark Explorer Darkrai ENG [PPorg].pgf</code>文件.</li>
<li>点击<code>LTDCE.exe</code>上的绿色框，并选择对应地区语言版本.</li>
<li>点击<code>LTDCE.exe</code>上的蓝色框.</li>
<li>在弹出的<em>Save Nintendo DS ROM</em>窗口中，打开到你想要保存的位置，在文件名处随意命名，点击<em>保存</em>.</li>
<li>得到<code>.nds</code>文件.</li>
</ul>
<h1 id="进行配信"><a href="#进行配信" class="headerlink" title="进行配信"></a>进行配信</h1><ul>
<li>将上一步得到的<code>.nds</code>文件放入烧录卡中，使用一台 <em>DS</em> 系列掌机打开该nds文件.</li>
<li>另一台 <em>DS</em> 系列掌机运行游戏，按照正常配信步骤配信即可. 参考<a href="https://wiki.52poke.com/wiki/%E7%A5%9E%E7%A7%98%E7%A4%BC%E7%89%A9#.E7.AC.AC.E5.9B.9B.E4.B8.96.E4.BB.A3">神百–神秘礼物</a>界面.</li>
</ul>
<blockquote>
<p>注意，这一步请确保 <em>DS</em> 系列掌机的WiFi开关打开（New 3DS、New 2DS、2DS、DSi系列需要在设置中打开，3DS需要打开侧边开关，DS、DS Lite系列不用管）</p>
</blockquote>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
        <tag>Pokemon-Distribution</tag>
        <tag>Pokemon-Gen4</tag>
        <tag>Pokemon-Gen5</tag>
      </tags>
  </entry>
  <entry>
    <title>宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</title>
    <url>/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/</url>
    <content><![CDATA[<p>这是宝可梦绿宝石及没电红蓝宝石的实机乱数教程.<br>不包含 ID 与 Egg 的乱数教程.<br>如有纰漏，请<a href="/about/">与我联系</a>，万分感谢！</p>
<p>封面 [ID:57789285]. </p>
<span id="more"></span>

<p><strong>注意，本教程仅支持：</strong></p>
<table>
<thead>
<tr>
<th align="center">Support</th>
<th align="center">红蓝宝石</th>
<th align="center">绿宝石</th>
</tr>
</thead>
<tbody><tr>
<td align="center">电池有电</td>
<td align="center">✘</td>
<td align="center">✔</td>
</tr>
<tr>
<td align="center">电池没电</td>
<td align="center">✔</td>
<td align="center">✔</td>
</tr>
</tbody></table>
<p>如果你在找有电的红蓝宝石实机乱数教程，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part2/">这里</a>.</p>
<p>如果你在找火红叶绿的实机乱数，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part3/">这里</a>.</p>
<blockquote>
<p>实机很难实现，难度很高.</p>
</blockquote>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>如果你想要乱数闪光宝可梦，你需要知道你的<a href="https://wiki.52poke.com/wiki/ID_No.#.E9.87.8CID_No.">SID</a>.</p>
<blockquote>
<p>如果你想要乱数的是已经创建好的存档，这可能会需要你导出存档并使用 <em>PKHex</em> 等软件查看你的存档（不涉及修改与导入），请根据自身接受程度使用.</p>
</blockquote>
<blockquote>
<p>由于我没有怎么研究过乱数ID，所以如果你想要乱数ID，请参考：<a href="https://www.smogon.com/ingame/rng/rs_nonbredrng#idsid">Smogon ID 乱数教程</a>.<br>之后如果自己研究了一遍就会上传Blog.</p>
</blockquote>
<blockquote>
<p>不会导出存档？看看这篇博客：<a href="/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles/">如何备份你的存档</a>.</p>
</blockquote>
<h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><ul>
<li>能够游玩第三世代宝可梦卡带的机器（<em>GBA</em>系列、初代<em>NDS</em> 或 <em>NDS lite</em>，不推荐使用 <em>NGC</em>）.</li>
<li>电脑.</li>
<li>（若使用初代<em>NDS</em> 或 <em>NDS lite</em>可选）<em>NDS</em>烧录卡与读卡器.<blockquote>
<p>使用 <em>NDS</em>烧录卡提取存档进行查看可以大幅节省部分步骤的时间，强烈推荐.请根据自身接受程度使用.<br>如果不准备使用烧录卡，请准备足够的神奇糖果.</p>
</blockquote>
</li>
</ul>
<h2 id="下载乱数所需工具："><a href="#下载乱数所需工具：" class="headerlink" title="下载乱数所需工具："></a>下载乱数所需工具：</h2><ul>
<li>计时器<a href="/download/CCTimer.rar">CCTimer</a><br>因为没有找到该软件的发布页，所以上传至仓库可直接点击下载，如果你知道它的发布页，请与我联系.</li>
<li>乱数工具<a href="https://www.dropbox.com/sh/68qqg26op3uaymc/AAC8QFFKYxAqQjG80abgcHZ1a?dl=0">3genSearch</a><br>国内需要科学上网，因原作者禁止二次发布所以这里不提供直接下载，可以通过各搜索引擎找到别人的分享.</li>
<li>乱数工具<a href="https://github.com/Admiral-Fish/RNGReporter/releases">RNGReporter</a><br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/RNGReporter.zip">这里</a>进行下载.</li>
</ul>
<blockquote>
<p>两个乱数工具选择任意一个都可以，本教程使用的是 <em>3genSearch</em>. RNGReporter的使用与之类似，还请读者自行探索.</p>
</blockquote>
<h2 id="了解乱数机制"><a href="#了解乱数机制" class="headerlink" title="了解乱数机制"></a>了解乱数机制</h2><p>我会尽量讲的简洁易懂一些，了解乱数机制可以为你理解每一步所做的原因，同时掌握各种乱数方法也会更迅速牢固.</p>
<h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><blockquote>
<p>真正意义上的随机数（或者随机事件）在某次产生过程中是按照实验过程中表现的分布概率随机产生的，其结果是不可预测的，是不可见的。而计算机中的随机函数是按照一定算法模拟产生的，其结果是确定的，是可见的。我们可以这样认为这个可预见的结果其出现的概率是100%。所以用计算机随机函数所产生的“随机数”并不随机，是伪随机数。</p>
</blockquote>
<h3 id="游戏机制与乱数目标"><a href="#游戏机制与乱数目标" class="headerlink" title="游戏机制与乱数目标"></a>游戏机制与乱数目标</h3><p>由于宝可梦绿宝石与没有电的红蓝宝石（以下简称 <em><strong>E</strong></em> 与 <em><strong>RS</strong></em> ）的初始seed相同（<em><strong>E</strong></em> : <code>0x 0</code>，<em><strong>RS</strong></em> : <code>0x 5A0</code>），而当进入游戏后，会以每秒约60帧的速度过帧（根据运行机器不同会有极小差别）.当游戏判断需要生成一只宝可梦的时候便会使用当前帧的数据来生成，我称之为 <em>生成帧</em> . <em>3genSearch</em> 与 <em>RNGReporter</em> 都可以用来获取一个seed下产生的帧的信息.<br>我们的目标就是在某一seed下准确击中想要的帧数，即控制 <em>生成帧</em>.</p>
<h2 id="确定乱数目标"><a href="#确定乱数目标" class="headerlink" title="确定乱数目标"></a>确定乱数目标</h2><p><em><strong>如果选择了野外相遇的宝可梦，请在队伍中准备一只习得了<a href="https://wiki.52poke.com/wiki/%E7%94%9C%E7%94%9C%E9%A6%99%E6%B0%94%EF%BC%88%E6%8B%9B%E5%BC%8F%EF%BC%89#.E5.8F.AF.E4.BB.A5.E5.AD.A6.E4.BC.9A.E8.AF.A5.E6.8B.9B.E5.BC.8F.E7.9A.84.E5.AE.9D.E5.8F.AF.E6.A2.A6">甜甜香气</a>的宝可梦.</strong></em><br>确定乱数目标后，选择相应的 <em>Method</em>. 如果是乱数蛋，请参阅<a href="https://www.smogon.com/ingame/rng/emerald_rng_part4">这里</a>.</p>
<h4 id="Method-1"><a href="#Method-1" class="headerlink" title="Method 1"></a><em>Method 1</em></h4><ul>
<li>御三家（<em><strong>RS</strong></em>、<em><strong>E</strong></em> 一周目与 <em><strong>E</strong></em> 二周目）</li>
<li>定点宝可梦</li>
<li>釜炎镇 NPC 赠送的小果然的蛋</li>
<li><em><strong>RS</strong></em> 通过甜甜香气遭遇的宝可梦</li>
<li><em><strong>RS</strong></em> 通过钓鱼遭遇的宝可梦（除丑丑鱼）</li>
<li><em><strong>RS</strong></em> 通过碎岩遭遇的宝可梦</li>
</ul>
<h4 id="Method-2"><a href="#Method-2" class="headerlink" title="Method 2"></a><em>Method 2</em></h4><ul>
<li>草丛/海草/深沙/洞穴/水上/可以遇到宝可梦的建筑中通过移动/转向 遭遇的宝可梦（除了游走宝可梦）</li>
<li><em><strong>E</strong></em> 通过甜甜香气遭遇的宝可梦</li>
<li><em><strong>E</strong></em> 钓鱼钓上来的宝可梦</li>
<li><em><strong>E</strong></em> 通过碎岩遇到的宝可梦</li>
</ul>
<h4 id="Method-4"><a href="#Method-4" class="headerlink" title="Method 4"></a><em>Method 4</em></h4><ul>
<li>钓鱼钓上来的丑丑鱼</li>
</ul>
<p>如果是 <em>Method 1</em>中的前三类，点击下面的谜拟Q来查看保存游戏的位置与生成帧的所在时机（ <em><strong>E</strong></em> 与 <em><strong>RS</strong></em> 有些会有区别）：</p>
<details>
    <summary><img no-lazy src="/images/mimikyu.png" alt="Method 2 请点击丘丘" align=left></summary>
    
<pre><code>-- 御三家：在博士的包前保存，在问你“Do you choose this POKéMON?”时等待生成帧
-- 飘浮泡泡：在反派干部前保存，在研究员说“It might be an odd way of thanking you, but take this POKéMON.”时等待生成帧
-- 游走水都：击败冠军后在出自己的房间门前存档，在让你选择红蓝时等待生成帧
-- 复活化石：在研究员前保存，在他说“The fossil was an ancient POKéMON. [LILEEP/ANORITH], it was!”时等待生成帧
-- 小果然的蛋：在 NPC 前存档，在她说“Good! I hope you&#39;ll walk plenty with this here EGG!”时等待生成帧
-- 变隐龙：在隐形的变隐龙前存档，在提示“The startled POKéMON attacked!”时等待生成帧
-- 大吾的铁哑铃：在精灵球前存档，在选择是否拿走时等待生成帧
-- 胡说树：在其面前存档，在提示“The weird tree attacked!”时等待生成帧
-- 盖欧卡与固拉多：在距离剧情触发前一步存档，在进入战斗前最后一段时等待生成帧
-- 凤王：Save on the first space of the peak of the cliff. Last input is pressing up on the directional pad to place yourself on the second space of the cliff.
-- 梦幻：Save in the area it appears in. Last input is a press of the A button to &quot;tag&quot; it.
-- 其他：在宝可梦/触发物前保存，在进入战斗前最后一段时等待生成帧

凤王和梦幻的不知道怎么表达比较好，看英文感受一下.
</code></pre>
  </details>
<br><br>

<p>如果是 <em>Method 2</em> 或 <em>Method 1</em> 的后三类，在进入战斗前最后一次点击作为生成帧.</p>
<blockquote>
<p>实际生成帧可能会更往后，如甜甜香气，但这段时间是固定的，可以通过多次尝试来更新.</p>
</blockquote>
<h1 id="开始乱数"><a href="#开始乱数" class="headerlink" title="开始乱数"></a>开始乱数</h1><h2 id="搜索目标宝可梦"><a href="#搜索目标宝可梦" class="headerlink" title="搜索目标宝可梦"></a>搜索目标宝可梦</h2><p>打开乱数工具，选择/填入图中红框中内容：<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure1.png" alt="Figure1"></p>
<ol>
<li>根据乱数目标选择<em>固定</em>或<em>野生</em>.</li>
<li>如果选择了<em>野生</em>，可以修改绿框中的地点、版本信息.</li>
<li>输入初期 seed，<em><strong>E</strong></em> 为 0，<em><strong>RS</strong></em> 为 5A0.</li>
<li>F为搜索帧数的范围，建议800~100000，因为 seed 固定了所以可能很靠后才有你想要的帧.（1秒约60帧，请自行推测是否有耐心）（请根据实际情况调整，如甜甜香气动画较长，所以起始帧会高一些）.</li>
<li><em>Method</em> 选择之前确定的 <em>Method</em>.</li>
<li>检索区域根据自己的需要填写，若勾选 <em><strong>只显示异色</strong></em> ，需要在勾选框上方填入表里ID.</li>
<li>点击黑框<em>计算</em>，得到结果.</li>
</ol>
<blockquote>
<p>没有想要的宝可梦怎么办？<br>不建议帧数再加了，10w帧约27.8分钟了，可以试着降低一下要求.<br>闪帧太靠后了怎么办？<br>换个存档叭. 太非了这个档.</p>
</blockquote>
<p>在结果中选择一个满意的结果作为目标帧，将其 <em><strong>F</strong></em> 栏（即为你的<em>目标帧</em>）填入蓝框中（蓝框后面的内容不需要管）.</p>
<h2 id="校准误差"><a href="#校准误差" class="headerlink" title="校准误差"></a>校准误差</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦）且准备使用烧录卡协助乱数，那么要在步骤1结束后，使用GBA_Backup软件将存档提取出来</strong></em></p>
<blockquote>
<p>GBA_Backup软件可在<a href="/How-To-Back-Up-Your-Savefiles/">这里</a>找到.</p>
</blockquote>
<ol>
<li>在游戏中你应该存档的位置存档（如果你准备在洞穴或是能出现宝可梦的建筑中使用甜甜香气，请往深处走一些距离，否则甜甜香气可能会失效），存档完成后关机.</li>
<li>打开计时器 <em>CCTimer</em>，选择 <em>Setting</em>，点击红框内容，根据游戏平台选择对应选项.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure2.png" alt="Figure2"></li>
<li>回到 <em>Timer</em>，在蓝框内填入你刚刚的 <em>目标帧</em> 并点击 <em><strong>Add</strong></em> .<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure3.png" alt="Figure3"></li>
<li>点击 <em><strong>Start</strong></em> 按钮的同时开始游戏(gba系列和设置过的nds是直接开机，未设置过的nds系列是在主页面点击GBA游戏图标).</li>
<li>在游戏中快速到达目标帧的确定位置（如：在选择宝可梦使用甜甜香气的界面）.</li>
<li>在 <em>CCTimer</em> 上的倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面.</li>
<li>捕捉这只宝可梦.</li>
<li><ul>
<li>如果你不准备使用烧录卡：将宝可梦的性格、等级、能力值等输入个体值计算软件得到其个体，如果无法得到唯一的个体，使用足够多的神奇糖果后重试. 这之后，关闭游戏. <em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦），记住不要保存</strong></em></li>
<li>如果你准备使用烧录卡：保存并关闭游戏，使用GBA_Backup软件提取出存档，使用读卡器连接到电脑后使用 <a href="https://github.com/kwsch/PKHeX/releases">PKHex</a> 软件打开存档，查看刚捕捉的宝可梦的数据.</li>
</ul>
</li>
<li>回到乱数工具，在黄框中填入刚捕捉到的宝可梦数据（如果不是闪光记得不要勾选 <em><strong>只显示异色</strong></em> ），点击 <em>计算</em>. 记下橙色框中的数字（如有多个，选择离<em>目标帧</em>最近的）.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure4.png" alt="Figure4"></li>
<li>回到 <em>CCTimer</em>，计算<em>目标帧</em>减去刚刚橙色框中的数字的值，点击 <em><strong>Clear</strong></em> 按钮清除后输入该值并点击 <em><strong>Add</strong></em> .<blockquote>
<p>例如 CCTimer 中的值（目标帧）是2156，击中帧是2177，2156 - 2177 = -21（橙色框中数字为 21），那么将 CCTimer 中的值更新为 2156 - 21 = 2135.<br>误差校准完成.</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>注意，如果你更换了目标，即宝可梦获得方式改变（如Method不同 或 由游戏厅切换为固拉多），请重新进行误差校准！</p>
</blockquote>
<h2 id="乱数"><a href="#乱数" class="headerlink" title="乱数"></a>乱数</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦）且使用烧录卡协助乱数，那么先使用GBA_Backup软件将备份存档导入</strong></em><br>和校准误差的4、5、6步一致：</p>
<ol>
<li>点击 <em><strong>Start</strong></em> 按钮的同时开始游戏.</li>
<li>在游戏中快速到达目标帧的确定位置.</li>
<li>在 <em>CCTimer</em> 上的倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面.</li>
<li>如果得到的不是<em>目标帧</em>，可以选择再次进行误差校准或者再多尝试几次.<blockquote>
<p>因为手工操作多少会有些误差，建议多尝试几次，若十几二十次失败再考虑重新校准误差.</p>
</blockquote>
</li>
<li>乱数成功，得到目标！</li>
</ol>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="https://taiyaki3gen.hatenablog.com/entry/2020/05/30/162400">3genSearch 作者博客</a></li>
<li><a href="https://www.smogon.com/ingame/rng/">Smogon RNG 教程</a></li>
<li><a href="https://www.bilibili.com/video/BV14Z4y1M7rM?share_source=copy_web">呆呆兽都能学会的【三代定点宝可梦乱数教程】 – 百分之零点六 哔哩哔哩</a></li>
</ul>
<h1 id="Appreciation"><a href="#Appreciation" class="headerlink" title="Appreciation"></a>Appreciation</h1><ul>
<li>感谢<strong>Rai</strong>为我纠正了一些错误.</li>
</ul>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
        <tag>Pokemon-RNG-Abuse</tag>
        <tag>Pokemon-Gen3</tag>
      </tags>
  </entry>
  <entry>
    <title>宝可梦卡带鉴别</title>
    <url>/Pokemon/Strategies/Out-Game/Pokemon-Cartridges-Authenticate/</url>
    <content><![CDATA[<p>从我的b站专栏：<a href="https://www.bilibili.com/read/cv10463502">宝可梦前代卡带鉴别</a>搬过来的，稍微有些修改.<br>主要就是宝可梦 <em>GBA</em> 和 <em>NDS</em> 卡带真伪的鉴别.<br>如果对你有帮助可以去专栏给个三连~</p>
<p>封面 [ID:78728436]. </p>
<span id="more"></span>

<hr>
<p>宝可梦前代作为比较保值甚至理财的游戏卡带最近价格一路飞升，而很多入坑的新人却对卡带真假的辨别毫无知识储备. 虽然很多大佬已经写过很多卡带鉴别帖，但有些可能不够有条理（？）决定再写一份.</p>
<p>由于3ds卡带没有假卡（反正我没见过），所以 <em><strong>本博客主要讨论宝可梦三代到四代的主系列游戏卡带、卡盒鉴别方法以及美版中纯美版（北美版）、加拿大美版和亚太美版的区别</strong></em>.</p>
<p>感谢<strong>犬犬</strong>补充与提供部分图片！</p>
<p>感谢<strong>大黄</strong>！为难这个懒b了，我这就爬.</p>
<p>感谢<strong>xxc</strong>提供的部分图片.</p>
<p><del>我就不信这个老金看不懂</del></p>
<p>大部分图片源自网络 侵删</p>
<blockquote>
<p>因为假卡制作成本固定而<em><strong>日版</strong></em>价格偏低，所以日版几乎没有假卡. 有也都是一眼就能看出来的（比如黑色卡壳的宝石什么的）. 所以日版可以大胆放心的买. 但不排除价格飞升后奸商开始把目光转到日版的情况，所以建议也稍微学一下卡带鉴别.</p>
</blockquote>
<h1 id="卡带"><a href="#卡带" class="headerlink" title="卡带"></a>卡带</h1><h3 id="GBA系列（红宝石-蓝宝石-火红-叶绿-绿宝石）"><a href="#GBA系列（红宝石-蓝宝石-火红-叶绿-绿宝石）" class="headerlink" title="GBA系列（红宝石 蓝宝石 火红 叶绿 绿宝石）"></a>GBA系列（红宝石 蓝宝石 火红 叶绿 绿宝石）</h3><ul>
<li><p>卡壳颜色以及贴纸颜色/字体，可以参照一下下面的对比图，还是比较明显的.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure1.webp" alt="Figure1"><br><br><br></p>
</li>
<li><p>正版卡带贴纸右侧有钢印. 这个方法可以确定这个壳子是正版壳，不排除里面芯片被人为换成假卡芯片的情况，不过有些钢印比较难拍出也有点难看出来.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure2.webp" alt="Figure2"><br><br><br></p>
</li>
<li><p>正版卡带左上方侧面有方形，火叶壳子没那么透不是很清楚.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure3.webp" alt="Figure3"><br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure4.webp" alt="Figure4"><br><br><br></p>
</li>
<li><p>正版卡带芯片背面左上方有田字（火叶相较宝石偏下一些）. 假卡芯片背面很多圆点. 这个方法可以判别卡带芯片是否为正版.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure5.webp" alt="Figure5"><br><br><br></p>
</li>
<li><p>芯片下方有行白字（Nintendo那行）. 有的假卡会没有，版本批次不同后面的数字不一样，但是每个版本一般固定只有两种. 假卡印刷歪一点. 理论上，看背面就好了（大黄原话）.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure6.webp" alt="Figure6"><br><br><br></p>
</li>
<li><p>与第四世代的联动. 据说现在假卡已经能做到了，而且新出的gba烧录卡也能做到，所以这个方法失效. 不过不能联动的肯定不是正卡.</p>
</li>
</ul>
<p><br><br></p>
<h3 id="NDS系列第一类（珍珠-钻石-白金）"><a href="#NDS系列第一类（珍珠-钻石-白金）" class="headerlink" title="NDS系列第一类（珍珠 钻石 白金）"></a>NDS系列第一类（珍珠 钻石 白金）</h3><p>这一类卡带偏灰色，较难辨别.</p>
<ul>
<li>首先是正面贴纸的颜色、字体、粗细等等，参照对比图.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure7.webp" alt="Figure7"></li>
</ul>
<p>上真下假.<br><br><br></p>
<ul>
<li>背面三行字的字体、粗细，其中第二行是反光材质的，有的角度拍不太清楚可以要求拍反光.</li>
<li>如果金手指（卡带背面下方金属部分）上方绿色部分的字不正便是假卡. 但不同角度照片也可能把正卡拍的比较歪，而且有的假卡做的已经很正了. 此外金手指上的字一般差不太多，不会像这个离谱到有Nintendo字样.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure8.webp" alt="Figure8"></li>
</ul>
<p>第二点与第三点的图.<br><br><br></p>
<ul>
<li>与第五世代的联动. 这个同GBA系列第四点，有的假卡已经能做到了，所以失效.<br><br><br></li>
</ul>
<h3 id="NDS系列第二类（心金-魂银-黑-白-黑2-白2）"><a href="#NDS系列第二类（心金-魂银-黑-白-黑2-白2）" class="headerlink" title="NDS系列第二类（心金 魂银 黑 白 黑2 白2）"></a>NDS系列第二类（心金 魂银 黑 白 黑2 白2）</h3><p>这一类卡带呈深黑色，与灰色还是有区别的.</p>
<ul>
<li>正版卡带在强光下卡带透红. 这个基本已经可以区别正卡假卡了.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure9.webp" alt="Figure9"></li>
</ul>
<p>都是正卡.<br><br><br></p>
<ul>
<li><p>正面贴纸的颜色、字体、粗细等等，同第一类.<br><br><br></p>
</li>
<li><p>背面字体、粗细，同第一类.<br><br><br></p>
</li>
<li><p>金手指的字正不正、对不对，同第一类.<br><br><br></p>
</li>
<li><p>心魂的与第五代联动，同第一类.<br><br><br></p>
</li>
<li><p>与宝可梦银行（Mover）（黑白与黑白2）或AR搜寻器的联动（黑白2）可以用于区分，暂时假卡好像还不能联动.<br><br><br></p>
</li>
</ul>
<blockquote>
<p>大概的就是这些，比较难区分的就是NDS系列第一类（dppt）了. 需要多看看，积累经验才能准确辨别.</p>
</blockquote>
<h1 id="卡盒"><a href="#卡盒" class="headerlink" title="卡盒"></a>卡盒</h1><h2 id="GBA系列"><a href="#GBA系列" class="headerlink" title="GBA系列"></a>GBA系列</h2><p>这个比较好认，色调啥的完全不对，一般一眼就能看出来. 假盒花里胡哨闪的过分.<br><br><br></p>
<h2 id="NDS系列"><a href="#NDS系列" class="headerlink" title="NDS系列"></a>NDS系列</h2><ul>
<li>全新的NDS美版卡带的塑封是没有中间一条Nintendo的，只有欧版全新才带那个塑封.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure10.webp" alt="Figure10"></li>
</ul>
<p>假.<br><br><br></p>
<ul>
<li>美版看左下角 <strong>E</strong> 字及其附近的粗细与字体.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure11.webp" alt="Figure11"></li>
</ul>
<p>上假下真<br>上面的E和下面的E在框框里的位置不太一样，粗细也不同.<br><br><br></p>
<ul>
<li>蓝色 wifi 标上 Nintendo 的字体（假卡不全是第二种）.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure12.webp" alt="Figure12"></li>
</ul>
<p>上正下假<br><br><br></p>
<ul>
<li>美版是黑灰色的盒子，欧版是白透色的盒子. 白透色的盒子上有个美版分级E很明显是假盒.<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure13.webp" alt="Figure13"></li>
</ul>
<p>假<br><br><br></p>
<ul>
<li>避免买只有三张说明书的（一张游戏说明书两张白色的纸片），很有可能是假盒 + 假说明书.</li>
</ul>
<p>一般来说假卡配假盒，假卡壳配假芯片的多. 但现在还有不少奸商真盒塞假卡或是真卡配假盒，所以还是要擦亮眼睛.</p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="美版的分类"><a href="#美版的分类" class="headerlink" title="美版的分类"></a>美版的分类</h1><p>纯美版（北美版）、加美版、亚太美版见图<br><img src="/images/body/Pokemon-Cartridges-Authenticate/Figure14.webp" alt="Figure14"></p>
<p>依次为纯美、加美、亚太美.<br>说明书上纯美加美没啥区别（具体的不太清楚，应该一样的），亚太美只有几张薄薄的小白纸.</p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="大黄的叮嘱："><a href="#大黄的叮嘱：" class="headerlink" title="大黄的叮嘱："></a>大黄的叮嘱：</h1><p><img src="/images/body/Pokemon-Cartridges-Authenticate/BigYellow.webp" alt="BigYellow"></p>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Collection</tag>
        <tag>Pokemon</tag>
      </tags>
  </entry>
  <entry>
    <title>宝可梦有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</title>
    <url>/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part2/</url>
    <content><![CDATA[<p>这是宝可梦有电红蓝宝石的实机乱数教程.<br>不包含 ID 与 Egg 的乱数教程.<br>如有纰漏，请<a href="/about/">与我联系</a>，万分感谢！</p>
<p>封面 [ID:88418874]. </p>
<span id="more"></span>

<p><strong>注意，本教程仅支持：有电的红蓝宝石.</strong></p>
<p>如果你在找绿宝石及没电红蓝宝石的红蓝宝石实机乱数教程，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">这里</a>.</p>
<p>如果你在找火红叶绿的实机乱数，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part3/">这里</a>.</p>
<blockquote>
<p>实机很难实现，难度很高.</p>
</blockquote>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>如果你想要乱数闪光宝可梦，你需要知道你的<a href="https://wiki.52poke.com/wiki/ID_No.#.E9.87.8CID_No.">SID</a>.</p>
<blockquote>
<p>如果你想要乱数的是已经创建好的存档，这可能会需要你导出存档并使用 <em>PKHex</em> 等软件查看你的存档（不涉及修改与导入），请根据自身接受程度使用.（本教程默认读者使用<em>NDS</em>烧录卡进行存档提取来方便查看个体）</p>
</blockquote>
<blockquote>
<p>由于我没有怎么研究过乱数ID，所以如果你想要乱数ID，请参考：<a href="https://www.smogon.com/ingame/rng/rs_nonbredrng#idsid">Smogon ID 乱数教程</a>.<br>之后如果自己研究了一遍就会上传Blog.</p>
</blockquote>
<blockquote>
<p>不会导出存档？看看这篇博客：<a href="/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles/">如何备份你的存档</a>.</p>
</blockquote>
<h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><ul>
<li>能够游玩第三世代宝可梦卡带的<em>NDS</em>系列机器（初代 <em>NDS</em> 或 <em>NDS lite</em>，以下统称 <em>NDS</em>）.</li>
<li>电脑.</li>
<li><em>NDS</em>烧录卡与读卡器.<blockquote>
<p>本教程默认读者使用<em>NDS</em>烧录卡进行存档提取来方便查看个体，如若抗拒，请参考 <a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a> 中提及的方法（使用神奇糖果）.</p>
</blockquote>
</li>
</ul>
<h2 id="下载乱数所需工具："><a href="#下载乱数所需工具：" class="headerlink" title="下载乱数所需工具："></a>下载乱数所需工具：</h2><ul>
<li>计时器<a href="/download/CCTimer.rar">CCTimer</a><br>因为没有找到该软件的发布页，所以上传至仓库可直接点击下载，如果你知道它的发布页，请与我联系.</li>
<li>乱数工具<a href="https://www.dropbox.com/sh/68qqg26op3uaymc/AAC8QFFKYxAqQjG80abgcHZ1a?dl=0">3genSearch</a><br>国内需要科学上网，因原作者禁止二次发布所以这里不提供直接下载，可以通过各搜索引擎找到别人的分享.</li>
<li>乱数工具<a href="https://github.com/Admiral-Fish/RNGReporter/releases">RNGReporter</a><br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/RNGReporter.zip">这里</a>进行下载.</li>
<li>时钟修复软件<a href="https://wiki.52poke.com/wiki/%E6%97%B6%E9%92%9F%E7%94%B5%E8%B7%AF%EF%BC%88%E6%BC%8F%E6%B4%9E%EF%BC%89#.E5.A4.96.E9.83.A8.E9.93.BE.E6.8E.A5">rtcread</a><br>将<code>.nds</code>文件放在烧录卡的储存卡中. 也可以点击<a href="/download/rtcread-ds.rar">这里</a>进行下载.</li>
<li>存档编辑软件<a href="https://github.com/kwsch/PKHeX/releases">PKHex</a><br>将使用其查看宝可梦的个体，不会涉及到存档修改.<br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/PKHeX(190705).zip">这里</a>进行下载（版本：19.07.05）.</li>
<li>seed查找工具<a href="https://www.smogon.com/forums/threads/rng-manipulation-in-firered-leafgreen-wild-pok%C3%A9mon-supported-in-rng-reporter-9-93.62357/">FRLGSeedFinder</a><br>如果选用3genSearch可以不用此工具. 也可以点击<a href="/download/FRLGSeedFinder.zip">这里</a>进行下载.</li>
</ul>
<blockquote>
<p>两个乱数工具选择任意一个都可以，本教程使用的是 <em>3genSearch</em>. RNGReporter的使用与之类似，还请读者自行探索.</p>
</blockquote>
<h2 id="了解乱数机制"><a href="#了解乱数机制" class="headerlink" title="了解乱数机制"></a>了解乱数机制</h2><p>请参考<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/#%E4%BA%86%E8%A7%A3%E4%B9%B1%E6%95%B0%E6%9C%BA%E5%88%B6">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a> 中的相应部分.<br>这里不同的是，我们需要知道有电的红蓝宝石（以下简称 <em><strong>RS</strong></em>）进入游戏的初始 seed. 而 <em><strong>RS</strong></em> 的初始 seed 在每一分钟都是相同的，也就是说，控制进入游戏时 <em>RTC</em> 的时间在同一分钟就可以固定住初始 seed，因此我们使用时钟修复软件 rtcread.</p>
<blockquote>
<p>我在参阅外网资料时有看到，<em><strong>RS</strong></em> 的初始 seed 每分钟推进 1，但实际操作中发现并不是这样. 有时会推进 1，有时会推进或者倒退很多（但不会太多，大约 2~16左右）. 因此 seed 并不会变化太快.</p>
</blockquote>
<h2 id="确定乱数目标"><a href="#确定乱数目标" class="headerlink" title="确定乱数目标"></a>确定乱数目标</h2><p>与<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/#%E7%A1%AE%E5%AE%9A%E4%B9%B1%E6%95%B0%E7%9B%AE%E6%A0%87">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a>相同.<br><em><strong>如果选择了野外相遇的宝可梦，请在队伍中准备一只习得了<a href="https://wiki.52poke.com/wiki/%E7%94%9C%E7%94%9C%E9%A6%99%E6%B0%94%EF%BC%88%E6%8B%9B%E5%BC%8F%EF%BC%89#.E5.8F.AF.E4.BB.A5.E5.AD.A6.E4.BC.9A.E8.AF.A5.E6.8B.9B.E5.BC.8F.E7.9A.84.E5.AE.9D.E5.8F.AF.E6.A2.A6">甜甜香气</a>的宝可梦.</strong></em><br>确定乱数目标后，选择相应的 <em>Method</em>. 如果是乱数蛋，请参阅<a href="https://www.smogon.com/ingame/rng/emerald_rng_part4">这里</a>.</p>
<h4 id="Method-1"><a href="#Method-1" class="headerlink" title="Method 1"></a><em>Method 1</em></h4><ul>
<li>御三家（<em><strong>RS</strong></em>、<em><strong>E</strong></em> 一周目与 <em><strong>E</strong></em> 二周目）</li>
<li>定点宝可梦</li>
<li>釜炎镇 NPC 赠送的小果然的蛋</li>
<li><em><strong>RS</strong></em> 通过甜甜香气遭遇的宝可梦</li>
<li><em><strong>RS</strong></em> 通过钓鱼遭遇的宝可梦（除丑丑鱼）</li>
<li><em><strong>RS</strong></em> 通过碎岩遭遇的宝可梦</li>
</ul>
<h4 id="Method-2"><a href="#Method-2" class="headerlink" title="Method 2"></a><em>Method 2</em></h4><ul>
<li>草丛/海草/深沙/洞穴/水上/可以遇到宝可梦的建筑中通过移动/转向 遭遇的宝可梦（除了游走宝可梦）</li>
<li><em><strong>E</strong></em> 通过甜甜香气遭遇的宝可梦</li>
<li><em><strong>E</strong></em> 钓鱼钓上来的宝可梦</li>
<li><em><strong>E</strong></em> 通过碎岩遇到的宝可梦</li>
</ul>
<h4 id="Method-4"><a href="#Method-4" class="headerlink" title="Method 4"></a><em>Method 4</em></h4><ul>
<li>钓鱼钓上来的丑丑鱼</li>
</ul>
<p>如果是 <em>Method 1</em>中的前三类，点击下面的谜拟Q来查看保存游戏的位置与生成帧的所在时机（ <em><strong>E</strong></em> 与 <em><strong>RS</strong></em> 有些会有区别）：</p>
<details>
    <summary><img no-lazy src="/images/mimikyu.png" alt="Method 2 请点击丘丘" align=left></summary>
    
<pre><code>-- 御三家：在博士的包前保存，在问你“Do you choose this POKéMON?”时等待生成帧
-- 飘浮泡泡：在反派干部前保存，在研究员说“It might be an odd way of thanking you, but take this POKéMON.”时等待生成帧
-- 游走水都：击败冠军后在出自己的房间门前存档，在让你选择红蓝时等待生成帧
-- 复活化石：在研究员前保存，在他说“The fossil was an ancient POKéMON. [LILEEP/ANORITH], it was!”时等待生成帧
-- 小果然的蛋：在 NPC 前存档，在她说“Good! I hope you&#39;ll walk plenty with this here EGG!”时等待生成帧
-- 变隐龙：在隐形的变隐龙前存档，在提示“The startled POKéMON attacked!”时等待生成帧
-- 大吾的铁哑铃：在精灵球前存档，在选择是否拿走时等待生成帧
-- 胡说树：在其面前存档，在提示“The weird tree attacked!”时等待生成帧
-- 盖欧卡与固拉多：在距离剧情触发前一步存档，在进入战斗前最后一段时等待生成帧
-- 凤王：Save on the first space of the peak of the cliff. Last input is pressing up on the directional pad to place yourself on the second space of the cliff.
-- 梦幻：Save in the area it appears in. Last input is a press of the A button to &quot;tag&quot; it.
-- 其他：在宝可梦/触发物前保存，在进入战斗前最后一段时等待生成帧

凤王和梦幻的不知道怎么表达比较好，看英文感受一下.
</code></pre>
  </details>
<br><br>

<p>如果是 <em>Method 2</em> 或 <em>Method 1</em> 的后三类，在进入战斗前最后一次点击作为生成帧.</p>
<blockquote>
<p>实际生成帧可能会更往后，如甜甜香气，但这段时间是固定的，可以通过多次尝试来更新.</p>
</blockquote>
<h1 id="开始乱数"><a href="#开始乱数" class="headerlink" title="开始乱数"></a>开始乱数</h1><h2 id="确定初始seed"><a href="#确定初始seed" class="headerlink" title="确定初始seed"></a>确定初始seed</h2><ol>
<li>在<em>NDS</em>上插入 <em><strong>RS</strong></em> 游戏卡带与烧录卡.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure1.png" alt="Figure1"></li>
<li>打开烧录卡，选择时钟修复软件 rtcread 运行.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure2.png" alt="Figure2"></li>
<li>按下 <em>start</em> 键，你可以看到当前 <em><strong>RS</strong></em> 卡带的RTC.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure3.png" alt="Figure3"></li>
<li>按下 <em>select</em> 键，进入修改RTC时间模式.</li>
<li>选择一个时间，并且让秒数归零，如图选择的是 <strong>2002-10-31 10:42:00</strong>.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure4.png" alt="Figure4"></li>
<li>按下 <em>start</em> 键，并尽快关机.</li>
<li>尽快开机进入游戏，任意捕捉一只宝可梦后存档并关机（宝可梦相遇越快越好）.</li>
<li>使用 NDS烧录卡 提取游戏存档后使用 PKHex 打开.</li>
<li>找到你捕捉的宝可梦，右击选择 <em>查看</em> 并选择左侧选项卡的 <em>数值</em>.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure5.png" alt="Figure5"></li>
<li>打开乱数工具，选择<em>个体逆算</em>，并根据 PKHex 中的数据填入并点击 <em>计算</em>（游戏版本与地点、相遇方式等也别忘了修改）<br>再根据PKHex左侧选项卡的 <em>主页面</em> 确定 <em>开始seed</em>（第一列）或 <em>生成seed</em>（第二列）（如果有多个无法区分，都记下，并可能需要再来一次. 此外，其实只要保证<strong>pid</strong>相同即可）.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure6.png" alt="Figure6"><br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure7.png" alt="Figure7"></li>
<li>右击复制该<em>开始seed</em>，选择<em>其他-初期seed检索</em> ，将复制的<em>开始seed</em>填入<em>目标seed</em>，勾选上 <em>初期seed全探索</em>.<br>[F] 处第二个空填入18000左右即可（根据你遇到这只宝可梦的游戏时间决定，一分钟约3600 F），点击 <em>计算</em>.<blockquote>
<p>图中实例宝可梦并非游戏一开始就遇到的，仅为教程作参考，以实际为准.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure8.png" alt="Figure8"></p>
</blockquote>
</li>
<li>记下F最接近实际相遇时间的<em>初期seed</em>. 这就是该RTC时间下的初始seed</li>
</ol>
<blockquote>
<p>之后的步骤与<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/#%E5%BC%80%E5%A7%8B%E4%B9%B1%E6%95%B0">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a>相应部分类似，但每次开始游戏前需要执行一遍步骤2~6，且需尽快开机进入游戏以确保seed不变.</p>
</blockquote>
<h2 id="搜索目标宝可梦"><a href="#搜索目标宝可梦" class="headerlink" title="搜索目标宝可梦"></a>搜索目标宝可梦</h2><p>打开乱数工具，选择/填入图中红框中内容：<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure1.png" alt="Figure1"></p>
<ol>
<li>根据乱数目标选择<em>固定</em>或<em>野生</em>.</li>
<li>如果选择了<em>野生</em>，可以修改绿框中的地点、版本信息.</li>
<li>输入之前得到的初期 seed.</li>
<li>F为搜索帧数的范围，建议800~10000，因为 seed 固定了所以可能很靠后才有你想要的帧.（1秒约60帧，请自行推测是否有耐心）（请根据实际情况调整，如甜甜香气动画较长，所以起始帧会高一些）.</li>
<li><em>Method</em> 选择之前确定的 <em>Method</em>.</li>
<li>检索区域根据自己的需要填写，若勾选 <em><strong>只显示异色</strong></em> ，需要在勾选框上方填入表里ID.</li>
<li>点击黑框<em>计算</em>，得到结果.</li>
</ol>
<blockquote>
<p>没有想要的宝可梦怎么办？<br>不建议帧数再加了，10w帧约27.8分钟了，可以试着降低一下要求.</p>
</blockquote>
<blockquote>
<p>闪帧太靠后了怎么办？<br>回到 <a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed">确定初始 seed</a>步骤，并在第五步选择一个不同的时间（精确到 min）.</p>
</blockquote>
<p>在结果中选择一个满意的结果作为目标帧，将其 <em><strong>F</strong></em> 栏（即为你的<em>目标帧</em>）填入蓝框中（蓝框后面的内容不需要管）.</p>
<h2 id="校准误差"><a href="#校准误差" class="headerlink" title="校准误差"></a>校准误差</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦），那么要在步骤1结束后，将存档备份</strong></em></p>
<ol>
<li>在游戏中你应该存档的位置存档（如果你准备在洞穴或是能出现宝可梦的建筑中使用甜甜香气，请往深处走一些距离，否则甜甜香气可能会失效），存档完成后关机.</li>
<li>打开计时器 <em>CCTimer</em>，选择 <em>Setting</em>，点击红框内容，根据游戏平台选择对应选项.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure2.png" alt="Figure2"></li>
<li>回到 <em>Timer</em>，在蓝框内填入你刚刚的 <em>目标帧</em> 并点击 <em><strong>Add</strong></em> .<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure3.png" alt="Figure3"></li>
<li><em><strong>执行一遍<a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed">确定初始 seed</a>步骤的2~6，且需尽快开机进入游戏以确保seed不变.</strong></em> 点击 <em><strong>Start</strong></em> 按钮的同时开始游戏(设置过的nds是直接开机，未设置过的nds系列是在主页面点击GBA游戏图标).</li>
<li>在游戏中快速到达目标帧的确定位置（如：在选择宝可梦使用甜甜香气的界面）.</li>
<li>在 <em>CCTimer</em> 上的倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面.</li>
<li>捕捉这只宝可梦.</li>
<li>保存并关闭游戏，提取存档，使用读卡器连接到电脑后使用 PKHex 打开存档，查看刚捕捉的宝可梦的数据.</li>
<li>回到乱数工具，在黄框中填入刚捕捉到的宝可梦数据（如果不是闪光记得不要勾选 <em><strong>只显示异色</strong></em> ），点击 <em>计算</em>. 记下橙色框中的数字（如有多个，选择离<em>目标帧</em>最近的）.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part1/Figure4.png" alt="Figure4"></li>
<li>回到 <em>CCTimer</em>，计算<em>目标帧</em>减去刚刚橙色框中的数字的值，点击 <em><strong>Clear</strong></em> 按钮清除后输入该值并点击 <em><strong>Add</strong></em> .<blockquote>
<p>例如 CCTimer 中的值（目标帧）是2156，击中帧是2177，2156 - 2177 = -21（橙色框中数字为 21），那么将 CCTimer 中的值更新为 2156 - 21 = 2135.<br>误差校准完成.</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>注意，如果你更换了目标，即宝可梦获得方式改变（如Method不同 或 由游戏厅切换为固拉多），请重新进行误差校准！</p>
</blockquote>
<h2 id="乱数"><a href="#乱数" class="headerlink" title="乱数"></a>乱数</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦），那么要先将备份存档恢复</strong></em><br>和校准误差的4、5、6步一致：</p>
<ol>
<li><em><strong>执行一遍<a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed">确定初始 seed</a>步骤的2~6，且需尽快开机进入游戏以确保seed不变.</strong></em> 点击 <em><strong>Start</strong></em> 按钮的同时开始游戏.</li>
<li>在游戏中快速到达目标帧的确定位置.</li>
<li>在 <em>CCTimer</em> 上的倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面.</li>
<li>如果得到的不是<em>目标帧</em>，可以选择再次进行误差校准或者再多尝试几次.<blockquote>
<p>因为手工操作多少会有些误差，建议多尝试几次，若十几二十次失败再考虑重新校准误差.</p>
</blockquote>
</li>
<li>乱数成功，得到目标！</li>
</ol>
<h1 id="如果选用-RNGReporter"><a href="#如果选用-RNGReporter" class="headerlink" title="如果选用 RNGReporter"></a>如果选用 RNGReporter</h1><p>发现这两个软件在反查初始seed有些不同，下面记录一下RNGReporter反查seed的方法：</p>
<ul>
<li>打开RNGReporter，选择<em>4th Gen Tools</em> 中的 <em>Calculate PID from IVs</em>.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure9.png" alt="Figure9"></li>
<li>输入个体性格与你的ID，点击<em>Find</em>，选择<strong>PID</strong>对应的一栏.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure10.png" alt="Figure10"></li>
<li>这里得到的seed是<em>生成seed</em>，将其输入工具<em>FRLGSeedFinder</em>中（虽然写的FRLG，但是三代通用）.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part2/Figure11.png" alt="Figure11"></li>
<li>得到初始seed.</li>
</ul>
<h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><ul>
<li>在<a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed">确定初始 seed</a>步骤可以多选择几个RTC时间，捉完宝可梦后保存然后再次重复，导出存档一起确定seed，然后选择最满意的.</li>
<li>还有一种比较麻烦的方法，在这里描述一下，十分费时费力，就不展开说了：<ul>
<li>准备大量的神奇糖果.</li>
<li>使用玩家自制的软件 <a href="https://www.smogon.com/forums/threads/fr-lg-rng-timer.3554964/">FR/LG RNG Timer</a>. 也可以点击<a href="/download/FRLG_RNG_Timer.jar">这里</a>进行下载.</li>
<li>进入游戏的同时开始计时器.</li>
<li>捕捉一只宝可梦并通过糖果确定个体.</li>
<li>使用个体查出初始seed.</li>
<li>查找该seed下满意的宝可梦，将目标帧数输入 FR/LG RNG Timer 点击 Submit.</li>
<li>游戏推进到等待生成帧.</li>
<li>倒计时结束触发生成帧.</li>
<li>捕捉并通过糖果确认个体.</li>
<li>利用个体查找击中帧数，记录校准值.</li>
<li>利用校准值再来一次.</li>
</ul>
</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="https://taiyaki3gen.hatenablog.com/entry/2020/05/30/162400">3genSearch 作者博客</a></li>
<li><a href="https://www.smogon.com/ingame/rng/">Smogon RNG 教程</a></li>
<li><a href="https://www.smogon.com/forums/threads/rng-manipulation-in-firered-leafgreen-wild-pok%C3%A9mon-supported-in-rng-reporter-9-93.62357/">RNG Manipulation in FireRed/LeafGreen: Wild Pokémon Supported in RNG Reporter 9.93</a></li>
<li><a href="https://www.smogon.com/forums/threads/fr-lg-rng-timer.3554964/">Programming - FR/LG RNG Timer</a></li>
</ul>
<h1 id="Appreciation"><a href="#Appreciation" class="headerlink" title="Appreciation"></a>Appreciation</h1><ul>
<li>感谢<strong>Rai</strong>为我纠正了一些错误.</li>
</ul>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
        <tag>Pokemon-RNG-Abuse</tag>
        <tag>Pokemon-Gen3</tag>
      </tags>
  </entry>
  <entry>
    <title>宝可梦火红叶绿实机乱数（不包含 ID 或 Egg）</title>
    <url>/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part3/</url>
    <content><![CDATA[<p>这是宝可梦火红叶绿的实机乱数教程.<br>不包含 ID 与 Egg 的乱数教程.<br>如有纰漏，请<a href="/about/">与我联系</a>，万分感谢！</p>
<p>封面 [ID:94783450]. </p>
<span id="more"></span>


<p><strong>注意，本教程仅支持：火红叶绿.</strong></p>
<p>如果你在找有电的红蓝宝石实机乱数教程，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part2/">这里</a>.<br>如果你在找绿宝石及没电红蓝宝石的红蓝宝石实机乱数教程，请点击<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">这里</a>.</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>在开始之前，你要知道火叶乱数的难度很高，可能会花费你大几小时的时间. 请自行斟酌.</p>
<p>如果你想要乱数闪光宝可梦，你需要知道你的<a href="https://wiki.52poke.com/wiki/ID_No.#.E9.87.8CID_No.">SID</a>.</p>
<blockquote>
<p>如果你想要乱数的是已经创建好的存档，这可能会需要你导出存档并使用 <em>PKHex</em> 等软件查看你的存档（不涉及修改与导入），请根据自身接受程度使用.（本教程默认读者使用<em>NDS</em>烧录卡进行存档提取来方便查看个体）</p>
</blockquote>
<blockquote>
<p>由于我没有怎么研究过乱数ID，所以如果你想要乱数ID，请参考：<a href="https://www.smogon.com/ingame/rng/rs_nonbredrng#idsid">Smogon ID 乱数教程</a>.<br>之后如果自己研究了一遍就会上传Blog.</p>
</blockquote>
<blockquote>
<p>不会导出存档？看看这篇博客：<a href="/Pokemon/Strategies/In-Game/How-To-Back-Up-Your-Savefiles/">如何备份你的存档</a>.</p>
</blockquote>
<h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><ul>
<li>能够游玩第三世代宝可梦卡带的<em>NDS</em>系列机器（初代 <em>NDS</em> 或 <em>NDS lite</em>，以下统称 <em>NDS</em>）.</li>
<li>电脑.</li>
<li><em>NDS</em>烧录卡与读卡器.<blockquote>
<p>本教程默认读者使用<em>NDS</em>烧录卡进行存档提取来方便查看个体，如若抗拒，请参考 <a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a> 中提及的方法（使用神奇糖果）.</p>
</blockquote>
</li>
</ul>
<h2 id="下载乱数所需工具："><a href="#下载乱数所需工具：" class="headerlink" title="下载乱数所需工具："></a>下载乱数所需工具：</h2><ul>
<li>计时器<a href="https://github.com/dylmeadows/EonTimer/releases">EonTimer</a><br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/EonTimer.rar">这里</a>进行下载.</li>
<li>乱数工具<a href="https://www.dropbox.com/sh/68qqg26op3uaymc/AAC8QFFKYxAqQjG80abgcHZ1a?dl=0">3genSearch</a><br>国内需要科学上网，因原作者禁止二次发布所以这里不提供直接下载，可以通过各搜索引擎找到别人的分享.</li>
<li>乱数工具<a href="https://github.com/Admiral-Fish/RNGReporter/releases">RNGReporter</a><br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/RNGReporter.zip">这里</a>进行下载.</li>
<li>存档编辑软件<a href="https://github.com/kwsch/PKHeX/releases">PKHex</a><br>将使用其查看宝可梦的个体，不会涉及到存档修改.<br>如果因为国内 GitHub 下载速度原因不好下载，可以点击<a href="/download/PKHeX(190705).zip">这里</a>进行下载（版本：19.07.05）.</li>
<li>seed查找工具<a href="https://www.smogon.com/forums/threads/rng-manipulation-in-firered-leafgreen-wild-pok%C3%A9mon-supported-in-rng-reporter-9-93.62357/">FRLGSeedFinder</a><br>如果选用3genSearch可以不用此工具. 也可以点击<a href="/download/FRLGSeedFinder.zip">这里</a>进行下载.</li>
</ul>
<blockquote>
<p>两个乱数工具选择任意一个都可以，本教程使用的是 <em>RNGReporter</em>. 3genSearch的使用与之类似，还请读者自行探索.</p>
</blockquote>
<h2 id="了解乱数机制"><a href="#了解乱数机制" class="headerlink" title="了解乱数机制"></a>了解乱数机制</h2><p>请参考<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/#%E4%BA%86%E8%A7%A3%E4%B9%B1%E6%95%B0%E6%9C%BA%E5%88%B6">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a> 中的相应部分.<br>这里不同的是，火红叶绿（以下简称 <em><strong>FRLG</strong></em>）的初始 seed 极难控制，它根据进入游戏到标题画面出现 <em>PRESS START</em> 的那段时间有三次按键判定，然后根据时间、按键等因素决定初始 seed 组，最后从中选择一个初始 seed（可能有些偏差，但大体上是这个意思）. 我们需要通过等待（不进行按键操作）至游戏自动到达 <em>PRESS START</em> 界面后再按键操作，这样会跳过前两次按键判定，使得我们更容易控制初始 seed. 此外，当你在 <em>PRESS START</em> 界面按下按键 <strong>A</strong> 或 <strong>START</strong> 后，不仅初始 seed 决定了，游戏也将开始推进帧数.</p>
<h2 id="确定乱数目标"><a href="#确定乱数目标" class="headerlink" title="确定乱数目标"></a>确定乱数目标</h2><p>请参考<a href="/Pokemon/Strategies/In-Game/RNG/Pokemon-RNG-Abuse-Gen3-Part1/#%E7%A1%AE%E5%AE%9A%E4%B9%B1%E6%95%B0%E7%9B%AE%E6%A0%87">宝可梦绿宝石及没有电的红蓝宝石实机乱数（不包含 ID 或 Egg）</a> 中的相应部分.<br>这里我以 <em>Method 1</em> 的游戏厅宝可梦为例，甜甜香气等的 Method 没有测试，如果你测试了，还请<a href="/about/">与我联系</a>，十分感谢.</p>
<h1 id="开始乱数"><a href="#开始乱数" class="headerlink" title="开始乱数"></a>开始乱数</h1><h2 id="确定初始seed组并选择备用初始seed"><a href="#确定初始seed组并选择备用初始seed" class="headerlink" title="确定初始seed组并选择备用初始seed"></a>确定初始seed组并选择备用初始seed</h2><ol>
<li>打开 <em>EonTimer</em> ，点击红色框来选择第三世代，在蓝色框中填入游戏等待时间.<br>（大于等于35000，1000每秒. 即如果填入37000，计时器会在第37秒归零. 不建议过长，游戏会自动重启.）<br>其他部分不需要修改.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part3/Figure1.png" alt="Figure1"></li>
<li>点击 <em><strong>Start</strong></em> 按钮的同时开始游戏(gba系列和设置过的nds是直接开机，未设置过的nds系列是在主页面点击GBA游戏图标).</li>
<li>在倒计时归 0 的同时按下 <strong>A</strong> 或 <strong>START</strong> 键. （这时应该进入 游戏选择存档进入界面）</li>
<li>进入游戏，任意获得一只宝可梦后存档并关机（越快越好），这里建议在游戏厅内兑换凯西.</li>
<li>重复步骤2~4，重复的次数建议在30次左右.</li>
<li>使用 NDS烧录卡 提取游戏存档后使用 PKHex 打开.</li>
<li>选择一只你获得的宝可梦，右击选择 <em>查看</em> 并选择左侧选项卡的 <em>数值</em>.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part3/Figure2.png" alt="Figure2"></li>
<li> 打开乱数工具<em>RNGReport</em>，选择顶部 <strong>4th Gen Tools</strong> 菜单栏，选择第一项 <em>Calculate PID from IVs</em>.</li>
<li>输入个体性格与你的ID，点击<em>Find</em>，选择<strong>PID</strong>对应的一栏.<br> <img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part3/Figure3.png" alt="Figure3"></li>
<li>将得到的seed输入工具<em>FRLGSeedFinder</em>中，得到初始seed（4位16进制数）.<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part3/Figure4.png" alt="Figure4"></li>
<li>将得到的seed记录下来.</li>
<li>重复步骤7~11，直到获取所有你在步骤5中得到的宝可梦的初始seed.</li>
<li>这样你就得到了步骤1中确定的游戏等待时间所对应的初始seed组.</li>
<li>从中选择出现频率最高的几个初始seed作为备用初始 seed. （如果第n高与第n+1高的seed出现频率差别较大，那么就选择到第n个）</li>
</ol>
<h2 id="搜索目标宝可梦"><a href="#搜索目标宝可梦" class="headerlink" title="搜索目标宝可梦"></a>搜索目标宝可梦</h2><p>回到乱数工具首页，选择/填入图中红框中内容：<br><img src="/images/body/Pokemon-RNG-Abuse-Gen3-Part3/Figure5.png" alt="Figure5"></p>
<ol>
<li><p><em>Method</em> 选择之前确定的 <em>Method</em>.</p>
</li>
<li><p>根据你想要的宝可梦个体、性格、性别等填入信息，如果想要闪光请填入你的 <strong>ID</strong> 与 <strong>SID</strong>，并勾选 <em>Shiny Only</em>.</p>
</li>
<li><p>输入之前得到的初期 seed.</p>
</li>
<li><p><em>Start Frame</em>为开始帧，<em>Max Results</em>为显示的结果数，即你的搜索范围是<em>Start Frame</em> ~ <em>Start Frame</em> + <em>Max Results</em>.（强烈建议选择两分钟以内的，即7200帧以内）</p>
</li>
<li><p>点击<em>Generate</em>，得到结果.</p>
</li>
<li><p>重复步骤1~5，将所有备用初始 seed 全部检索完后选择最合适的 seed 与 Frame 作为目标初始 seed 与目标帧.（这里以 seed: AAA2，Frame: 1499为例）</p>
</li>
<li><p>注意，<em>RNGReporter</em>的起始Frame与<em>FRLGSeedFinder</em>不同，请-1后当作结果（即这里目标帧不是1499，而是1498）</p>
<blockquote>
<p>没有想要的宝可梦或者闪帧太靠后了怎么办？<br>回到 <a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed%E7%BB%84%E5%B9%B6%E9%80%89%E6%8B%A9%E5%A4%87%E7%94%A8%E5%88%9D%E5%A7%8Bseed">确定初始seed组并选择备用初始seed</a>步骤，并在第一步选择一个不同的游戏等待时间（或者赌一下初始 seed 组中备用初始 seed 以外的 seed）.</p>
</blockquote>
</li>
<li><p>将目标帧填入 <em>EonTimer</em> 中的 <strong>Target Frame</strong> 栏.</p>
</li>
</ol>
<h2 id="校准误差"><a href="#校准误差" class="headerlink" title="校准误差"></a>校准误差</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦），那么要在步骤1结束后，将存档备份</strong></em></p>
<ol>
<li>在游戏中你应该存档的位置存档（如果你准备在洞穴或是能出现宝可梦的建筑中使用甜甜香气，请往深处走一些距离，否则甜甜香气可能会失效），存档完成后关机.</li>
<li>点击计时器 <em><strong>Start</strong></em> 按钮的同时开始游戏(设置过的nds是直接开机，未设置过的nds系列是在主页面点击GBA游戏图标).</li>
<li>在计时器的第一次倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 或 <em><strong>Start</strong></em> 键，然后快速到达目标帧的确定位置（如：在选择宝可梦使用甜甜香气的界面）.</li>
<li>在计时器的第二次倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面后捕捉这只宝可梦，保存并关闭游戏. （游戏厅等是直接获取）</li>
<li>执行<a href="#%E7%A1%AE%E5%AE%9A%E5%88%9D%E5%A7%8Bseed%E7%BB%84%E5%B9%B6%E9%80%89%E6%8B%A9%E5%A4%87%E7%94%A8%E5%88%9D%E5%A7%8Bseed">确定初始seed组并选择备用初始seed</a>中的步骤6~10，你在得到的 seed 前还会得到该 seed 前的一串数字，那是你击中的帧数，记为 <em>击中帧</em>. （如果seed不是你的初始seed也没关系，这很正常，我们这一步只为了校准误差）</li>
<li>回到计时器，计算<em>目标帧</em>减去<em>击中帧</em>的值，将其加上<em>目标帧</em>的值得到新的目标帧，将其替换计时器的 <strong>Target Frame</strong> 栏.<blockquote>
<p>例如 目标帧 是1498，击中帧是1398，1498 - 1398 = 100，那么将 Target Frame 中的值更新为 1498 + 100 = 1598.<br>误差校准完成.</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>注意，如果你更换了目标，即目标帧有较大变动或者宝可梦获得方式改变（如Method不同 或 由游戏厅切换为卡比兽），请重新进行误差校准！</p>
</blockquote>
<h2 id="乱数"><a href="#乱数" class="headerlink" title="乱数"></a>乱数</h2><p><em><strong>如果你的目标宝可梦不是野外宝可梦（如定点宝可梦），那么要先将备份存档恢复</strong></em><br>和校准误差的3、4步类似：</p>
<ol>
<li>在计时器的第一次倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 或 <em><strong>Start</strong></em> 键，然后快速到达目标帧的确定位置（如：在选择宝可梦使用甜甜香气的界面）.</li>
<li>在计时器的第二次倒计时归零的瞬间按下机器的 <em><strong>A</strong></em> 键，然后等待进入战斗界面（游戏厅等是直接获取）.</li>
<li>如果得到的不是<em>目标帧</em>，不要保存，关闭游戏重复步骤1~2.</li>
<li>尝试较多次数仍失败的话，可以选择再次进行误差校准.<blockquote>
<p>因为手工操作的误差与火叶机制的特殊性，建议尝试大几十次，再考虑重新校准误差.</p>
</blockquote>
</li>
<li>乱数成功，得到目标！</li>
</ol>
<h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><ul>
<li>还有一种比较麻烦的方法，在这里描述一下，十分费时费力，就不展开说了：<ul>
<li>准备大量的神奇糖果.</li>
<li>使用玩家自制的软件 <a href="https://www.smogon.com/forums/threads/fr-lg-rng-timer.3554964/">FR/LG RNG Timer</a>. 也可以点击<a href="/download/FRLG_RNG_Timer.jar">这里</a>进行下载.</li>
<li>进入游戏的同时开始计时器.</li>
<li>捕捉一只宝可梦并通过糖果确定个体.</li>
<li>使用个体查出初始seed.</li>
<li>查找该seed下满意的宝可梦，将目标帧数输入 FR/LG RNG Timer 点击 Submit.</li>
<li>游戏推进到等待生成帧.</li>
<li>倒计时结束触发生成帧.</li>
<li>捕捉并通过糖果确认个体.</li>
<li>利用个体查找击中帧数，记录校准值.</li>
<li>利用校准值再来一次.</li>
</ul>
</li>
</ul>
<p><em><strong>十分不建议使用这种方法，在FRLG中，经常出现跳过奇数帧或偶数帧的情况，触发条件暂时还未知（不操作不影响），所以这个方法极难成功.</strong></em></p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="https://www.smogon.com/ingame/rng/">Smogon RNG 教程</a></li>
<li><a href="https://www.smogon.com/forums/threads/rng-manipulation-in-firered-leafgreen-wild-pok%C3%A9mon-supported-in-rng-reporter-9-93.62357/">RNG Manipulation in FireRed/LeafGreen: Wild Pokémon Supported in RNG Reporter 9.93</a></li>
<li><a href="https://www.smogon.com/forums/threads/fr-lg-rng-timer.3554964/">Programming - FR/LG RNG Timer</a></li>
</ul>
]]></content>
      <categories>
        <category>Pokemon</category>
      </categories>
      <tags>
        <tag>Pokemon</tag>
        <tag>Pokemon-RNG-Abuse</tag>
        <tag>Pokemon-Gen3</tag>
      </tags>
  </entry>
</search>
